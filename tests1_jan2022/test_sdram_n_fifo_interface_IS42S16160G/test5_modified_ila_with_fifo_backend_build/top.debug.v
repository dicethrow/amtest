/* Automatically generated by Amaranth 0.3. Do not edit. */
/* Generated by Yosys 0.13+3 (git sha1 61324cf55, clang 10.0.0-4ubuntu1 -fPIC -Os) */

(* \amaranth.hierarchy  = "top.dut.U$$0" *)
(* generator = "Amaranth" *)
module \U$$0 (spi_device__sck, spi_device__cs, spi_device__sdi, spi_device__sdo, clk, trigger, button_fire_0__i, button_fire_1__i, complete);
  reg \$auto$verilog_backend.cc:2083:dump_module$97  = 0;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:803" *)
  wire \$1 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:511" *)
  wire [1:0] \$100 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
  wire \$102 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
  wire \$104 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
  wire \$106 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
  wire \$108 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:822" *)
  wire \$11 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:822" *)
  wire \$13 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:822" *)
  wire \$15 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
  wire \$17 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
  wire \$19 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:803" *)
  wire \$21 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *)
  wire \$23 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *)
  wire \$25 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
  wire \$27 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
  wire \$29 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:803" *)
  wire \$3 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:803" *)
  wire \$31 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *)
  wire \$33 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *)
  wire \$35 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:512" *)
  wire [6:0] \$37 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:512" *)
  wire [6:0] \$38 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:803" *)
  wire \$40 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *)
  wire \$42 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *)
  wire \$44 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:803" *)
  wire \$46 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *)
  wire \$48 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:803" *)
  wire \$5 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *)
  wire \$50 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:803" *)
  wire \$52 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *)
  wire \$54 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *)
  wire \$56 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:516" *)
  wire [6:0] \$58 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:516" *)
  wire [6:0] \$59 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:803" *)
  wire \$61 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *)
  wire \$63 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *)
  wire \$65 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" *)
  wire \$67 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" *)
  wire \$69 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *)
  wire \$7 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" *)
  wire \$71 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" *)
  wire \$73 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" *)
  wire \$75 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" *)
  wire \$77 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" *)
  wire \$79 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" *)
  wire \$81 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" *)
  wire \$83 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:425" *)
  wire [15:0] \$85 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:84" *)
  wire [15:0] \$87 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:86" *)
  wire [15:0] \$89 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *)
  wire \$9 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:79" *)
  wire [15:0] \$91 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:81" *)
  wire [15:0] \$93 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:449" *)
  wire [15:0] \$95 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:511" *)
  wire [1:0] \$97 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:511" *)
  wire [1:0] \$98 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:672" *)
  wire [6:0] _address;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:671" *)
  wire _is_write;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input button_fire_0__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input button_fire_1__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:349" *)
  input clk;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:449" *)
  input complete;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:510" *)
  wire consume_buffered_cdc_r_consume_buffered;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:514" *)
  wire consume_buffered_cdc_w_consume_buffered;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:654" *)
  wire idle;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:474" *)
  wire [7:0] interface_command;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:483" *)
  wire interface_idle;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire interface_spi_device__cs;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:499" *)
  wire interface_spi_device__sck;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire interface_spi_device__sdi;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire interface_spi_device__sdo;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:484" *)
  wire interface_stalled;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:480" *)
  wire interface_word_complete;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:478" *)
  wire [15:0] interface_word_received;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:479" *)
  reg [15:0] interface_word_to_send;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:83" *)
  reg [15:0] r_data = 16'h0000;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:83" *)
  reg [15:0] \r_data$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:85" *)
  wire r_en;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:86" *)
  reg [5:0] r_level = 6'h00;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:86" *)
  reg [5:0] \r_level$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:84" *)
  reg r_rdy = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:84" *)
  reg \r_rdy$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:488" *)
  reg r_rst = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:488" *)
  reg \r_rst$next ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:772" *)
  wire register_6_write_strobe;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:775" *)
  wire [15:0] register_6_write_value;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:772" *)
  wire register_7_write_strobe;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:775" *)
  wire register_7_write_value;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:772" *)
  wire register_8_write_strobe;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:775" *)
  wire [5:0] register_8_write_value;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:775" *)
  wire [15:0] register_9_write_value;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:772" *)
  wire register_a_write_strobe;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:775" *)
  wire register_a_write_value;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:802" *)
  wire register_address_matches_0;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:802" *)
  wire register_address_matches_2;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:802" *)
  wire register_address_matches_5;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:802" *)
  wire register_address_matches_6;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:802" *)
  wire register_address_matches_7;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:802" *)
  wire register_address_matches_8;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:802" *)
  wire register_address_matches_9;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:802" *)
  wire register_address_matches_a;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:802" *)
  wire register_address_matches_b;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:772" *)
  wire register_b_write_strobe;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:775" *)
  wire [5:0] register_b_write_value;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  input spi_device__cs;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  input spi_device__sck;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  input spi_device__sdi;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  output spi_device__sdo;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:655" *)
  wire stalled;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:97" *)
  output trigger;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:83" *)
  wire [15:0] unbuffered_r_data;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:85" *)
  reg unbuffered_r_en;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:86" *)
  wire [5:0] unbuffered_r_level;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:84" *)
  wire unbuffered_r_rdy;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:311" *)
  wire unbuffered_r_rst;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:78" *)
  wire [15:0] unbuffered_w_data;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:80" *)
  wire unbuffered_w_en;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:81" *)
  wire [5:0] unbuffered_w_level;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:79" *)
  wire unbuffered_w_rdy;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:78" *)
  reg [15:0] w_data = 16'h0000;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:78" *)
  reg [15:0] \w_data$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:80" *)
  wire w_en;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:81" *)
  reg [5:0] w_level = 6'h00;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:81" *)
  reg [5:0] \w_level$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:79" *)
  reg w_rdy = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:79" *)
  reg \w_rdy$next ;
  assign \$9  = \$7  & (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *) register_address_matches_6;
  assign \$100  = \$98  & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:511" *) r_rdy;
  assign \$102  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *) r_rdy;
  assign \$104  = r_en | (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *) \$102 ;
  assign \$106  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *) r_rdy;
  assign \$108  = r_en | (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *) \$106 ;
  assign \$11  = ~ (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:822" *) _is_write;
  assign \$13  = \$11  & (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:822" *) interface_word_complete;
  assign \$15  = \$13  & (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:822" *) register_address_matches_6;
  assign \$17  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *) r_rdy;
  assign \$1  = ! (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:803" *) _address;
  assign \$19  = r_en | (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *) \$17 ;
  assign \$21  = _address == (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:803" *) 3'h7;
  assign \$23  = _is_write & (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *) interface_word_complete;
  assign \$25  = \$23  & (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *) register_address_matches_7;
  assign \$27  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *) r_rdy;
  assign \$29  = r_en | (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *) \$27 ;
  assign \$31  = _address == (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:803" *) 4'h8;
  assign \$33  = _is_write & (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *) interface_word_complete;
  assign \$35  = \$33  & (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *) register_address_matches_8;
  assign \$38  = unbuffered_r_level + (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:512" *) consume_buffered_cdc_r_consume_buffered;
  assign \$3  = _address == (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:803" *) 2'h2;
  assign \$40  = _address == (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:803" *) 4'h9;
  assign \$42  = _is_write & (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *) interface_word_complete;
  assign \$44  = \$42  & (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *) register_address_matches_9;
  assign \$46  = _address == (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:803" *) 4'ha;
  assign \$48  = _is_write & (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *) interface_word_complete;
  assign \$50  = \$48  & (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *) register_address_matches_a;
  assign \$52  = _address == (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:803" *) 4'hb;
  assign \$54  = _is_write & (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *) interface_word_complete;
  assign \$56  = \$54  & (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *) register_address_matches_b;
  assign \$5  = _address == (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:803" *) 3'h6;
  assign \$59  = unbuffered_w_level + (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:516" *) consume_buffered_cdc_w_consume_buffered;
  assign \$61  = _address == (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:803" *) 3'h5;
  assign \$63  = _is_write & (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *) interface_word_complete;
  assign \$65  = \$63  & (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *) register_address_matches_5;
  assign \$67  = ! (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" *) _address;
  assign \$69  = _address == (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" *) 2'h2;
  assign \$71  = _address == (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" *) 3'h6;
  assign \$73  = _address == (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" *) 3'h7;
  assign \$75  = _address == (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" *) 4'h8;
  assign \$77  = _address == (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" *) 4'h9;
  assign \$7  = _is_write & (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:816" *) interface_word_complete;
  assign \$79  = _address == (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" *) 4'ha;
  assign \$81  = _address == (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" *) 4'hb;
  assign \$83  = _address == (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" *) 3'h5;
  assign \$85  = + (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:425" *) { button_fire_1__i, button_fire_0__i };
  assign \$87  = + (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:84" *) r_rdy;
  assign \$89  = + (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:86" *) r_level;
  assign \$91  = + (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:79" *) w_rdy;
  assign \$93  = + (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:81" *) w_level;
  assign \$95  = + (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:449" *) complete;
  assign \$98  = r_rdy - (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:511" *) r_en;
  always @(posedge clk)
    r_rst <= \r_rst$next ;
  always @(posedge clk)
    w_level <= \w_level$next ;
  always @(posedge clk)
    w_rdy <= \w_rdy$next ;
  always @(posedge clk)
    w_data <= \w_data$next ;
  always @(posedge clk)
    r_level <= \r_level$next ;
  always @(posedge clk)
    r_rdy <= \r_rdy$next ;
  always @(posedge clk)
    r_data <= \r_data$next ;
  consume_buffered_cdc consume_buffered_cdc (
    .clk(clk),
    .r_consume_buffered(consume_buffered_cdc_r_consume_buffered),
    .w_consume_buffered(consume_buffered_cdc_w_consume_buffered)
  );
  \interface  \interface  (
    .clk(clk),
    .command(interface_command),
    .idle(interface_idle),
    .spi_device__cs(interface_spi_device__cs),
    .spi_device__sck(interface_spi_device__sck),
    .spi_device__sdi(interface_spi_device__sdi),
    .spi_device__sdo(interface_spi_device__sdo),
    .stalled(interface_stalled),
    .word_complete(interface_word_complete),
    .word_received(interface_word_received),
    .word_to_send(interface_word_to_send)
  );
  unbuffered unbuffered (
    .clk(clk),
    .r_data(unbuffered_r_data),
    .r_en(unbuffered_r_en),
    .r_level(unbuffered_r_level),
    .r_rdy(unbuffered_r_rdy),
    .r_rst(unbuffered_r_rst),
    .w_data(unbuffered_w_data),
    .w_en(unbuffered_w_en),
    .w_level(unbuffered_w_level),
    .w_rdy(unbuffered_w_rdy)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$97 ) begin end
    \r_data$next  = r_data;
    (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:779" *)
    casez (register_6_write_strobe)
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:779" */
      1'h1:
          \r_data$next  = register_6_write_value;
    endcase
    (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
    casez (\$19 )
      /* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" */
      1'h1:
          \r_data$next  = unbuffered_r_data;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$97 ) begin end
    \r_rdy$next  = r_rdy;
    (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:779" *)
    casez (register_7_write_strobe)
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:779" */
      1'h1:
          \r_rdy$next  = register_7_write_value;
    endcase
    (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
    casez (\$29 )
      /* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" */
      1'h1:
          \r_rdy$next  = unbuffered_r_rdy;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$97 ) begin end
    \r_level$next  = \$38 [5:0];
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$97 ) begin end
    \w_data$next  = w_data;
    (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:779" *)
    casez (w_en)
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:779" */
      1'h1:
          \w_data$next  = register_9_write_value;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$97 ) begin end
    \w_rdy$next  = unbuffered_w_rdy;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$97 ) begin end
    \w_level$next  = \$59 [5:0];
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$97 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" *)
    casez ({ \$83 , \$81 , \$79 , \$77 , \$75 , \$73 , \$71 , \$69 , \$67  })
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" */
      9'b????????1:
          interface_word_to_send = 16'hffff;
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" */
      9'b???????1?:
          interface_word_to_send = \$85 ;
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" */
      9'b??????1??:
          interface_word_to_send = r_data;
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" */
      9'b?????1???:
          interface_word_to_send = \$87 ;
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" */
      9'b????1????:
          interface_word_to_send = \$89 ;
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" */
      9'b???1?????:
          interface_word_to_send = w_data;
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" */
      9'b??1??????:
          interface_word_to_send = \$91 ;
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" */
      9'b?1???????:
          interface_word_to_send = \$93 ;
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:876" */
      9'h1??:
          interface_word_to_send = \$95 ;
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:889" */
      default:
          interface_word_to_send = 16'h0000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$97 ) begin end
    \r_rst$next  = r_rst;
    (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
    casez (\$104 )
      /* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" */
      1'h1:
          \r_rst$next  = unbuffered_r_rst;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$97 ) begin end
    unbuffered_r_en = 1'h0;
    (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
    casez (\$108 )
      /* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" */
      1'h1:
          unbuffered_r_en = 1'h1;
    endcase
  end
  assign \$37  = \$38 ;
  assign \$58  = \$59 ;
  assign \$97  = \$100 ;
  assign consume_buffered_cdc_r_consume_buffered = \$100 [0];
  assign unbuffered_w_en = w_en;
  assign unbuffered_w_data = w_data;
  assign trigger = \$65 ;
  assign register_address_matches_5 = \$61 ;
  assign register_b_write_strobe = \$56 ;
  assign register_b_write_value = interface_word_received[5:0];
  assign register_address_matches_b = \$52 ;
  assign register_a_write_strobe = \$50 ;
  assign register_a_write_value = interface_word_received[0];
  assign register_address_matches_a = \$46 ;
  assign w_en = \$44 ;
  assign register_9_write_value = interface_word_received;
  assign register_address_matches_9 = \$40 ;
  assign register_8_write_strobe = \$35 ;
  assign register_8_write_value = interface_word_received[5:0];
  assign register_address_matches_8 = \$31 ;
  assign register_7_write_strobe = \$25 ;
  assign register_7_write_value = interface_word_received[0];
  assign register_address_matches_7 = \$21 ;
  assign r_en = \$15 ;
  assign register_6_write_strobe = \$9 ;
  assign register_6_write_value = interface_word_received;
  assign register_address_matches_6 = \$5 ;
  assign register_address_matches_2 = \$3 ;
  assign register_address_matches_0 = \$1 ;
  assign _address = interface_command[6:0];
  assign _is_write = interface_command[7];
  assign stalled = interface_stalled;
  assign idle = interface_idle;
  assign interface_spi_device__cs = spi_device__cs;
  assign spi_device__sdo = interface_spi_device__sdo;
  assign interface_spi_device__sdi = spi_device__sdi;
  assign interface_spi_device__sck = spi_device__sck;
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$1" *)
(* generator = "Amaranth" *)
module \U$$1 (spi_device__sck, spi_device__sdi, spi_device__sdo, spi_device__cs, counter, clk, trigger, complete);
  reg \$auto$verilog_backend.cc:2083:dump_module$98  = 0;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:103" *)
  wire [31:0] \$1 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1369" *)
  wire \$3 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1369" *)
  wire \$5 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/debug/ila.py:576" *)
  wire [7:0] \$7 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/debug/ila.py:576" *)
  wire [7:0] \$8 ;
  (* \amaranth.sample_reg  = 32'd1 *)
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/debug/ila.py:548" *)
  reg \$sample$s$spi_device__cs$sync$1  = 1'h0;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/debug/ila.py:548" *)
  wire \$sample$s$spi_device__cs$sync$1$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:349" *)
  input clk;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:449" *)
  output complete;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/gateware/amtest/amtest/boards/ulx3s/gui_ui/common/test_common/fpga_gui_interface.py:8" *)
  input [15:0] counter;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/debug/ila.py:565" *)
  reg [6:0] current_sample_number = 7'h00;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/debug/ila.py:565" *)
  reg [6:0] \current_sample_number$next ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:103" *)
  wire [23:0] ila_captured_sample;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:102" *)
  reg [6:0] ila_captured_sample_number = 7'h00;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:102" *)
  wire [6:0] \ila_captured_sample_number$next ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/debug/ila.py:548" *)
  input spi_device__cs;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  input spi_device__sck;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  input spi_device__sdi;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  output spi_device__sdo;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire spi_spi_device__cs;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire spi_spi_device__sck;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire spi_spi_device__sdi;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire spi_spi_device__sdo;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:210" *)
  wire spi_word_accepted;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:209" *)
  wire [31:0] spi_word_out;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:97" *)
  input trigger;
  assign \$1  = + (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:103" *) ila_captured_sample;
  assign \$3  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1369" *) \$sample$s$spi_device__cs$sync$1 ;
  assign \$5  = \$3  & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1369" *) spi_device__cs;
  assign \$8  = current_sample_number + (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/debug/ila.py:576" *) 1'h1;
  always @(posedge clk)
    \$sample$s$spi_device__cs$sync$1  <= spi_device__cs;
  always @(posedge clk)
    ila_captured_sample_number <= current_sample_number;
  always @(posedge clk)
    current_sample_number <= \current_sample_number$next ;
  ila ila (
    .captured_sample(ila_captured_sample),
    .captured_sample_number(ila_captured_sample_number),
    .clk(clk),
    .complete(complete),
    .counter(counter),
    .trigger(trigger)
  );
  spi spi (
    .clk(clk),
    .spi_device__cs(spi_spi_device__cs),
    .spi_device__sck(spi_spi_device__sck),
    .spi_device__sdi(spi_spi_device__sdi),
    .spi_device__sdo(spi_spi_device__sdo),
    .word_accepted(spi_word_accepted),
    .word_out(spi_word_out)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$98 ) begin end
    \current_sample_number$next  = current_sample_number;
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/debug/ila.py:569" *)
    casez (spi_device__cs)
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/debug/ila.py:569" */
      1'h1:
          (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/debug/ila.py:570" *)
          casez ({ spi_word_accepted, \$5  })
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/debug/ila.py:570" */
            2'b?1:
                \current_sample_number$next  = 7'h01;
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/debug/ila.py:575" */
            2'b1?:
                \current_sample_number$next  = \$8 [6:0];
          endcase
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/debug/ila.py:580" */
      default:
          \current_sample_number$next  = 7'h00;
    endcase
  end
  assign \$7  = \$8 ;
  assign \$sample$s$spi_device__cs$sync$1$next  = spi_device__cs;
  assign \ila_captured_sample_number$next  = current_sample_number;
  assign spi_word_out = \$1 ;
  assign spi_spi_device__cs = spi_device__cs;
  assign spi_device__sdo = spi_spi_device__sdo;
  assign spi_spi_device__sdi = spi_device__sdi;
  assign spi_spi_device__sck = spi_device__sck;
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$2" *)
(* generator = "Amaranth" *)
module \U$$2 (clk, esp32_spi_0__gpio4_copi__i, spi_device__sdi);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:349" *)
  input clk;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input esp32_spi_0__gpio4_copi__i;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  output spi_device__sdi;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg stage0 = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire \stage0$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg stage1 = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire \stage1$next ;
  always @(posedge clk)
    stage1 <= stage0;
  always @(posedge clk)
    stage0 <= esp32_spi_0__gpio4_copi__i;
  assign spi_device__sdi = stage1;
  assign \stage1$next  = stage0;
  assign \stage0$next  = esp32_spi_0__gpio4_copi__i;
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$3" *)
(* generator = "Amaranth" *)
module \U$$3 (clk, esp32_spi_0__gpio16_sclk__i, spi_device__sck);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:349" *)
  input clk;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input esp32_spi_0__gpio16_sclk__i;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  output spi_device__sck;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg stage0 = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire \stage0$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg stage1 = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire \stage1$next ;
  always @(posedge clk)
    stage1 <= stage0;
  always @(posedge clk)
    stage0 <= esp32_spi_0__gpio16_sclk__i;
  assign spi_device__sck = stage1;
  assign \stage1$next  = stage0;
  assign \stage0$next  = esp32_spi_0__gpio16_sclk__i;
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$4" *)
(* generator = "Amaranth" *)
module \U$$4 (clk, esp32_spi_0__gpio5_cs__i, spi_device__cs);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:349" *)
  input clk;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input esp32_spi_0__gpio5_cs__i;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  output spi_device__cs;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg stage0 = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire \stage0$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg stage1 = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire \stage1$next ;
  always @(posedge clk)
    stage1 <= stage0;
  always @(posedge clk)
    stage0 <= esp32_spi_0__gpio5_cs__i;
  assign spi_device__cs = stage1;
  assign \stage1$next  = stage0;
  assign \stage0$next  = esp32_spi_0__gpio5_cs__i;
endmodule

(* \amaranth.hierarchy  = "top.cd_sync" *)
(* generator = "Amaranth" *)
module cd_sync(clk25_0__i, clk);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:339" *)
  wire \$1 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:349" *)
  output clk;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input clk25_0__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:334" *)
  wire gsr0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:335" *)
  wire gsr1;
  FD1S3AX #(
    .GSR("DISABLED")
  ) \U$$0  (
    .CK(clk25_0__i),
    .D(1'h1),
    .Q(gsr0)
  );
  FD1S3AX #(
    .GSR("DISABLED")
  ) \U$$1  (
    .CK(clk25_0__i),
    .D(gsr0),
    .Q(gsr1)
  );
  SGSR \U$$2  (
    .CLK(clk25_0__i),
    .GSR(gsr1)
  );
  assign clk = clk25_0__i;
  assign \$1  = 1'h1;
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$0.consume_buffered_cdc" *)
(* generator = "Amaranth" *)
module consume_buffered_cdc(r_consume_buffered, w_consume_buffered, clk);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:349" *)
  input clk;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:510" *)
  input r_consume_buffered;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg stage0 = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire \stage0$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg stage1 = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire \stage1$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg stage2 = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire \stage2$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg stage3 = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire \stage3$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:514" *)
  output w_consume_buffered;
  always @(posedge clk)
    stage3 <= stage2;
  always @(posedge clk)
    stage2 <= stage1;
  always @(posedge clk)
    stage1 <= stage0;
  always @(posedge clk)
    stage0 <= r_consume_buffered;
  assign w_consume_buffered = stage3;
  assign \stage3$next  = stage2;
  assign \stage2$next  = stage1;
  assign \stage1$next  = stage0;
  assign \stage0$next  = r_consume_buffered;
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$1.ila.fifo.consume_buffered_cdc" *)
(* generator = "Amaranth" *)
module \consume_buffered_cdc$10 (r_consume_buffered, w_consume_buffered, clk);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:349" *)
  input clk;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:510" *)
  input r_consume_buffered;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg stage0 = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire \stage0$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg stage1 = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire \stage1$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg stage2 = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire \stage2$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg stage3 = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire \stage3$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:514" *)
  output w_consume_buffered;
  always @(posedge clk)
    stage3 <= stage2;
  always @(posedge clk)
    stage2 <= stage1;
  always @(posedge clk)
    stage1 <= stage0;
  always @(posedge clk)
    stage0 <= r_consume_buffered;
  assign w_consume_buffered = stage3;
  assign \stage3$next  = stage2;
  assign \stage2$next  = stage1;
  assign \stage1$next  = stage0;
  assign \stage0$next  = r_consume_buffered;
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$0.unbuffered.consume_cdc" *)
(* generator = "Amaranth" *)
module consume_cdc(consume_r_gry, consume_w_gry, clk);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:349" *)
  input clk;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:353" *)
  input [5:0] consume_r_gry;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:354" *)
  output [5:0] consume_w_gry;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg [5:0] stage0 = 6'h00;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire [5:0] \stage0$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg [5:0] stage1 = 6'h00;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire [5:0] \stage1$next ;
  always @(posedge clk)
    stage1 <= stage0;
  always @(posedge clk)
    stage0 <= consume_r_gry;
  assign consume_w_gry = stage1;
  assign \stage1$next  = stage0;
  assign \stage0$next  = consume_r_gry;
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$1.ila.fifo.unbuffered.consume_cdc" *)
(* generator = "Amaranth" *)
module \consume_cdc$5 (consume_r_gry, consume_w_gry, clk);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:349" *)
  input clk;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:353" *)
  input [7:0] consume_r_gry;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:354" *)
  output [7:0] consume_w_gry;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg [7:0] stage0 = 8'h00;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire [7:0] \stage0$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg [7:0] stage1 = 8'h00;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire [7:0] \stage1$next ;
  always @(posedge clk)
    stage1 <= stage0;
  always @(posedge clk)
    stage0 <= consume_r_gry;
  assign consume_w_gry = stage1;
  assign \stage1$next  = stage0;
  assign \stage0$next  = consume_r_gry;
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$0.unbuffered.consume_dec" *)
(* generator = "Amaranth" *)
module consume_dec(o, i);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$1 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$3 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$5 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$7 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$9 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:176" *)
  input [5:0] i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:177" *)
  output [5:0] o;
  assign \$9  = o[1] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[0];
  assign \$1  = o[5] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[4];
  assign \$3  = o[4] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[3];
  assign \$5  = o[3] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[2];
  assign \$7  = o[2] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[1];
  assign o[0] = \$9 ;
  assign o[1] = \$7 ;
  assign o[2] = \$5 ;
  assign o[3] = \$3 ;
  assign o[4] = \$1 ;
  assign o[5] = i[5];
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$1.ila.fifo.unbuffered.consume_dec" *)
(* generator = "Amaranth" *)
module \consume_dec$6 (o, i);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$1 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$11 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$13 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$3 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$5 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$7 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$9 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:176" *)
  input [7:0] i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:177" *)
  output [7:0] o;
  assign \$9  = o[3] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[2];
  assign \$11  = o[2] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[1];
  assign \$13  = o[1] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[0];
  assign \$1  = o[7] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[6];
  assign \$3  = o[6] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[5];
  assign \$5  = o[5] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[4];
  assign \$7  = o[4] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[3];
  assign o[0] = \$13 ;
  assign o[1] = \$11 ;
  assign o[2] = \$9 ;
  assign o[3] = \$7 ;
  assign o[4] = \$5 ;
  assign o[5] = \$3 ;
  assign o[6] = \$1 ;
  assign o[7] = i[7];
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$0.unbuffered.consume_enc" *)
(* generator = "Amaranth" *)
module consume_enc(o, i);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:154" *)
  wire [5:0] \$1 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:149" *)
  input [5:0] i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:150" *)
  output [5:0] o;
  assign \$1  = i ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:154" *) i[5:1];
  assign o = \$1 ;
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$1.ila.fifo.unbuffered.consume_enc" *)
(* generator = "Amaranth" *)
module \consume_enc$4 (o, i);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:154" *)
  wire [7:0] \$1 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:149" *)
  input [7:0] i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:150" *)
  output [7:0] o;
  assign \$1  = i ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:154" *) i[7:1];
  assign o = \$1 ;
endmodule

(* \amaranth.hierarchy  = "top.dut" *)
(* generator = "Amaranth" *)
module dut(led_1__o, led_2__o, led_3__o, led_4__o, led_5__o, led_6__o, led_7__o, esp32_spi_0__gpio12_cipo__o, clk, button_fire_0__i, button_fire_1__i, esp32_spi_0__gpio4_copi__i, esp32_spi_0__gpio16_sclk__i, esp32_spi_0__gpio5_cs__i, led_0__o);
  reg \$auto$verilog_backend.cc:2083:dump_module$99  = 0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1369" *)
  wire \$10 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:450" *)
  wire [8:0] \$12 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:450" *)
  wire [8:0] \$13 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:483" *)
  wire \$15 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1369" *)
  wire \$17 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1369" *)
  wire \$19 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *)
  wire \$21 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *)
  wire \$23 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1369" *)
  wire \$25 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1369" *)
  wire \$27 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *)
  wire \$29 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *)
  wire \$31 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:509" *)
  wire [16:0] \$33 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:509" *)
  wire [16:0] \$34 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1369" *)
  wire \$8 ;
  (* \amaranth.sample_reg  = 32'd1 *)
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:449" *)
  reg \$sample$s$complete$sync$1  = 1'h0;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:449" *)
  wire \$sample$s$complete$sync$1$next ;
  (* \amaranth.sample_reg  = 32'd1 *)
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:500" *)
  reg \$sample$s$spi_device__sck$sync$1  = 1'h0;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:500" *)
  wire \$sample$s$spi_device__sck$sync$1$next ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:449" *)
  wire \U$$0_complete ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire \U$$0_spi_device__cs ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire \U$$0_spi_device__sck ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire \U$$0_spi_device__sdi ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire \U$$0_spi_device__sdo ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:97" *)
  wire \U$$0_trigger ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/gateware/amtest/amtest/boards/ulx3s/gui_ui/common/test_common/fpga_gui_interface.py:8" *)
  reg [15:0] \U$$1_counter  = 16'h0000;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/gateware/amtest/amtest/boards/ulx3s/gui_ui/common/test_common/fpga_gui_interface.py:8" *)
  reg [15:0] \U$$1_counter$next ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/debug/ila.py:548" *)
  wire \U$$1_spi_device__cs ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire \U$$1_spi_device__sck ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire \U$$1_spi_device__sdi ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire \U$$1_spi_device__sdo ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire \U$$2_spi_device__sdi ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire \U$$3_spi_device__sck ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire \U$$4_spi_device__cs ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input button_fire_0__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input button_fire_1__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:349" *)
  input clk;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  output esp32_spi_0__gpio12_cipo__o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input esp32_spi_0__gpio16_sclk__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input esp32_spi_0__gpio4_copi__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input esp32_spi_0__gpio5_cs__i;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:497" *)
  reg last_sdo = 1'h0;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:497" *)
  reg \last_sdo$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  output led_0__o;
  reg led_0__o = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  reg \led_0__o$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  output led_1__o;
  reg led_1__o = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  reg \led_1__o$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  output led_2__o;
  reg led_2__o = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  reg \led_2__o$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  output led_3__o;
  reg led_3__o = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  reg \led_3__o$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  output led_4__o;
  reg led_4__o = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  reg \led_4__o$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  output led_5__o;
  reg led_5__o = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  reg \led_5__o$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  output led_6__o;
  reg led_6__o = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  reg \led_6__o$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  output led_7__o;
  reg led_7__o = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  reg \led_7__o$next ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire mux_spi_device__cs;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire \mux_spi_device__cs$5 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire mux_spi_device__sck;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire \mux_spi_device__sck$1 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:500" *)
  wire \mux_spi_device__sck$4 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire mux_spi_device__sdi;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire \mux_spi_device__sdi$2 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire \mux_spi_device__sdi$6 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire mux_spi_device__sdo;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire \mux_spi_device__sdo$3 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  reg \mux_spi_device__sdo$7  = 1'h0;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  reg \mux_spi_device__sdo$7$next ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire spi_device__cs;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  wire spi_device__sdo;
  assign \$10  = \$8  & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1369" *) \U$$0_complete ;
  assign \$13  = { led_7__o, led_6__o, led_5__o, led_4__o, led_3__o, led_2__o, led_1__o, led_0__o } + (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:450" *) 1'h1;
  assign \$15  = ~ (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:483" *) \U$$4_spi_device__cs ;
  assign \$17  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1369" *) \$sample$s$spi_device__sck$sync$1 ;
  assign \$19  = \$17  & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1369" *) \mux_spi_device__sck$4 ;
  assign \$21  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *) \mux_spi_device__sck$4 ;
  assign \$23  = \$sample$s$spi_device__sck$sync$1  & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *) \$21 ;
  assign \$25  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1369" *) \$sample$s$spi_device__sck$sync$1 ;
  assign \$27  = \$25  & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1369" *) \mux_spi_device__sck$4 ;
  assign \$29  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *) \mux_spi_device__sck$4 ;
  assign \$31  = \$sample$s$spi_device__sck$sync$1  & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *) \$29 ;
  assign \$34  = \U$$1_counter  + (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:509" *) 1'h1;
  assign \$8  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1369" *) \$sample$s$complete$sync$1 ;
  always @(posedge clk)
    \$sample$s$spi_device__sck$sync$1  <= \mux_spi_device__sck$4 ;
  always @(posedge clk)
    led_4__o <= \led_4__o$next ;
  always @(posedge clk)
    led_5__o <= \led_5__o$next ;
  always @(posedge clk)
    led_6__o <= \led_6__o$next ;
  always @(posedge clk)
    led_7__o <= \led_7__o$next ;
  always @(posedge clk)
    \$sample$s$complete$sync$1  <= \U$$0_complete ;
  always @(posedge clk)
    \U$$1_counter  <= \U$$1_counter$next ;
  always @(posedge clk)
    \mux_spi_device__sdo$7  <= \mux_spi_device__sdo$7$next ;
  always @(posedge clk)
    last_sdo <= \last_sdo$next ;
  always @(posedge clk)
    led_0__o <= \led_0__o$next ;
  always @(posedge clk)
    led_1__o <= \led_1__o$next ;
  always @(posedge clk)
    led_2__o <= \led_2__o$next ;
  always @(posedge clk)
    led_3__o <= \led_3__o$next ;
  \U$$0  \U$$0  (
    .button_fire_0__i(button_fire_0__i),
    .button_fire_1__i(button_fire_1__i),
    .clk(clk),
    .complete(\U$$0_complete ),
    .spi_device__cs(\U$$0_spi_device__cs ),
    .spi_device__sck(\U$$0_spi_device__sck ),
    .spi_device__sdi(\U$$0_spi_device__sdi ),
    .spi_device__sdo(\U$$0_spi_device__sdo ),
    .trigger(\U$$0_trigger )
  );
  \U$$1  \U$$1  (
    .clk(clk),
    .complete(\U$$0_complete ),
    .counter(\U$$1_counter ),
    .spi_device__cs(\U$$1_spi_device__cs ),
    .spi_device__sck(\U$$1_spi_device__sck ),
    .spi_device__sdi(\U$$1_spi_device__sdi ),
    .spi_device__sdo(\U$$1_spi_device__sdo ),
    .trigger(\U$$0_trigger )
  );
  \U$$2  \U$$2  (
    .clk(clk),
    .esp32_spi_0__gpio4_copi__i(esp32_spi_0__gpio4_copi__i),
    .spi_device__sdi(\U$$2_spi_device__sdi )
  );
  \U$$3  \U$$3  (
    .clk(clk),
    .esp32_spi_0__gpio16_sclk__i(esp32_spi_0__gpio16_sclk__i),
    .spi_device__sck(\U$$3_spi_device__sck )
  );
  \U$$4  \U$$4  (
    .clk(clk),
    .esp32_spi_0__gpio5_cs__i(esp32_spi_0__gpio5_cs__i),
    .spi_device__cs(\U$$4_spi_device__cs )
  );
  mux mux (
    .spi_device__cs(mux_spi_device__cs),
    .\spi_device__cs$5 (\mux_spi_device__cs$5 ),
    .spi_device__sck(mux_spi_device__sck),
    .\spi_device__sck$1 (\mux_spi_device__sck$1 ),
    .\spi_device__sck$4 (\mux_spi_device__sck$4 ),
    .spi_device__sdi(mux_spi_device__sdi),
    .\spi_device__sdi$2 (\mux_spi_device__sdi$2 ),
    .\spi_device__sdi$6 (\mux_spi_device__sdi$6 ),
    .spi_device__sdo(mux_spi_device__sdo),
    .\spi_device__sdo$3 (\mux_spi_device__sdo$3 ),
    .\spi_device__sdo$7 (\mux_spi_device__sdo$7 )
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$99 ) begin end
    \led_0__o$next  = led_0__o;
    \led_1__o$next  = led_1__o;
    \led_2__o$next  = led_2__o;
    \led_3__o$next  = led_3__o;
    \led_4__o$next  = led_4__o;
    \led_5__o$next  = led_5__o;
    \led_6__o$next  = led_6__o;
    \led_7__o$next  = led_7__o;
    (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:449" *)
    casez (\$10 )
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:449" */
      1'h1:
          { \led_7__o$next , \led_6__o$next , \led_5__o$next , \led_4__o$next , \led_3__o$next , \led_2__o$next , \led_1__o$next , \led_0__o$next  } = \$13 [7:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$99 ) begin end
    \last_sdo$next  = last_sdo;
    (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:498" *)
    casez ({ \$23 , \$19  })
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:498" */
      2'b?1:
          \last_sdo$next  = \U$$0_spi_device__sdo ;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$99 ) begin end
    \mux_spi_device__sdo$7$next  = \mux_spi_device__sdo$7 ;
    (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:498" *)
    casez ({ \$31 , \$27  })
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:498" */
      2'b?1:
          /* empty */;
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:500" */
      2'b1?:
          \mux_spi_device__sdo$7$next  = last_sdo;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$99 ) begin end
    \U$$1_counter$next  = \$34 [15:0];
  end
  assign \$12  = \$13 ;
  assign \$33  = \$34 ;
  assign \$sample$s$spi_device__sck$sync$1$next  = \mux_spi_device__sck$4 ;
  assign \$sample$s$complete$sync$1$next  = \U$$0_complete ;
  assign \mux_spi_device__cs$5  = \U$$4_spi_device__cs ;
  assign \U$$0_spi_device__sdi  = \mux_spi_device__sdi$6 ;
  assign \U$$0_spi_device__cs  = \mux_spi_device__cs$5 ;
  assign \U$$0_spi_device__sck  = \mux_spi_device__sck$4 ;
  assign mux_spi_device__cs = \$15 ;
  assign \U$$1_spi_device__cs  = mux_spi_device__cs;
  assign \mux_spi_device__sdo$3  = \U$$1_spi_device__sdo ;
  assign \U$$1_spi_device__sdi  = \mux_spi_device__sdi$2 ;
  assign \U$$1_spi_device__sck  = \mux_spi_device__sck$1 ;
  assign spi_device__cs = \U$$4_spi_device__cs ;
  assign spi_device__sdo = mux_spi_device__sdo;
  assign mux_spi_device__sdi = \U$$2_spi_device__sdi ;
  assign mux_spi_device__sck = \U$$3_spi_device__sck ;
  assign esp32_spi_0__gpio12_cipo__o = spi_device__sdo;
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$1.ila.fifo" *)
(* generator = "Amaranth" *)
module fifo(r_rdy, r_en, w_rdy, w_level, w_en, w_data, r_data, clk);
  reg \$auto$verilog_backend.cc:2083:dump_module$100  = 0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:511" *)
  wire [1:0] \$1 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:516" *)
  wire [8:0] \$10 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
  wire \$12 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
  wire \$14 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
  wire \$16 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
  wire \$18 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:511" *)
  wire [1:0] \$2 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
  wire \$20 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
  wire \$22 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
  wire \$24 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
  wire \$26 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:511" *)
  wire [1:0] \$4 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:512" *)
  wire [8:0] \$6 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:512" *)
  wire [8:0] \$7 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:516" *)
  wire [8:0] \$9 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:349" *)
  input clk;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:510" *)
  wire consume_buffered_cdc_r_consume_buffered;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:514" *)
  wire consume_buffered_cdc_w_consume_buffered;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:83" *)
  output [23:0] r_data;
  reg [23:0] r_data = 24'h000000;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:83" *)
  reg [23:0] \r_data$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:85" *)
  input r_en;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:86" *)
  reg [7:0] r_level = 8'h00;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:86" *)
  wire [7:0] \r_level$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:84" *)
  output r_rdy;
  reg r_rdy = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:84" *)
  reg \r_rdy$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:488" *)
  reg r_rst = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:488" *)
  reg \r_rst$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:83" *)
  wire [23:0] unbuffered_r_data;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:85" *)
  reg unbuffered_r_en;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:86" *)
  wire [7:0] unbuffered_r_level;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:84" *)
  wire unbuffered_r_rdy;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:311" *)
  wire unbuffered_r_rst;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:78" *)
  wire [23:0] unbuffered_w_data;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:80" *)
  wire unbuffered_w_en;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:81" *)
  wire [7:0] unbuffered_w_level;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:79" *)
  wire unbuffered_w_rdy;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:78" *)
  input [23:0] w_data;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:80" *)
  input w_en;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:81" *)
  output [7:0] w_level;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:79" *)
  output w_rdy;
  assign \$10  = unbuffered_w_level + (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:516" *) consume_buffered_cdc_w_consume_buffered;
  assign \$12  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *) r_rdy;
  assign \$14  = r_en | (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *) \$12 ;
  assign \$16  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *) r_rdy;
  assign \$18  = r_en | (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *) \$16 ;
  assign \$20  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *) r_rdy;
  assign \$22  = r_en | (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *) \$20 ;
  assign \$24  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *) r_rdy;
  assign \$26  = r_en | (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *) \$24 ;
  assign \$2  = r_rdy - (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:511" *) r_en;
  assign \$4  = \$2  & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:511" *) r_rdy;
  assign \$7  = unbuffered_r_level + (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:512" *) consume_buffered_cdc_r_consume_buffered;
  always @(posedge clk)
    r_rst <= \r_rst$next ;
  always @(posedge clk)
    r_rdy <= \r_rdy$next ;
  always @(posedge clk)
    r_data <= \r_data$next ;
  always @(posedge clk)
    r_level <= \$7 [7:0];
  \consume_buffered_cdc$10  consume_buffered_cdc (
    .clk(clk),
    .r_consume_buffered(consume_buffered_cdc_r_consume_buffered),
    .w_consume_buffered(consume_buffered_cdc_w_consume_buffered)
  );
  \unbuffered$1  unbuffered (
    .clk(clk),
    .r_data(unbuffered_r_data),
    .r_en(unbuffered_r_en),
    .r_level(unbuffered_r_level),
    .r_rdy(unbuffered_r_rdy),
    .r_rst(unbuffered_r_rst),
    .w_data(unbuffered_w_data),
    .w_en(unbuffered_w_en),
    .w_level(unbuffered_w_level),
    .w_rdy(unbuffered_w_rdy)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$100 ) begin end
    \r_data$next  = r_data;
    (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
    casez (\$14 )
      /* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" */
      1'h1:
          \r_data$next  = unbuffered_r_data;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$100 ) begin end
    \r_rdy$next  = r_rdy;
    (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
    casez (\$18 )
      /* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" */
      1'h1:
          \r_rdy$next  = unbuffered_r_rdy;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$100 ) begin end
    \r_rst$next  = r_rst;
    (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
    casez (\$22 )
      /* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" */
      1'h1:
          \r_rst$next  = unbuffered_r_rst;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$100 ) begin end
    unbuffered_r_en = 1'h0;
    (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" *)
    casez (\$26 )
      /* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:518" */
      1'h1:
          unbuffered_r_en = 1'h1;
    endcase
  end
  assign \$1  = \$4 ;
  assign \$6  = \$7 ;
  assign \$9  = \$10 ;
  assign w_level = \$10 [7:0];
  assign \r_level$next  = \$7 [7:0];
  assign consume_buffered_cdc_r_consume_buffered = \$4 [0];
  assign unbuffered_w_en = w_en;
  assign w_rdy = unbuffered_w_rdy;
  assign unbuffered_w_data = w_data;
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$1.ila" *)
(* generator = "Amaranth" *)
module ila(counter, clk, trigger, captured_sample, captured_sample_number, complete);
  reg \$auto$verilog_backend.cc:2083:dump_module$101  = 0;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *)
  wire \$11 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *)
  wire \$13 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *)
  wire [8:0] \$15 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *)
  wire \$17 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *)
  wire \$19 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *)
  wire [8:0] \$21 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *)
  wire \$23 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *)
  wire \$25 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *)
  wire [8:0] \$27 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *)
  wire \$29 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:202" *)
  wire \$3 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *)
  wire \$31 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *)
  wire [8:0] \$33 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *)
  wire \$35 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *)
  wire \$37 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:258" *)
  wire [7:0] \$39 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:258" *)
  wire \$41 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:258" *)
  wire [7:0] \$5 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:258" *)
  wire \$7 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *)
  wire [8:0] \$9 ;
  (* \amaranth.sample_reg  = 32'd1 *)
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:258" *)
  reg [6:0] \$sample$s$captured_sample_number$sync$1  = 7'h00;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:258" *)
  wire [6:0] \$sample$s$captured_sample_number$sync$1$next ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:103" *)
  output [23:0] captured_sample;
  reg [23:0] captured_sample = 24'h000000;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:103" *)
  reg [23:0] \captured_sample$next ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:102" *)
  input [6:0] captured_sample_number;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:98" *)
  wire capturing;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:349" *)
  input clk;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:449" *)
  output complete;
  reg complete = 1'h0;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:449" *)
  reg \complete$next ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/gateware/amtest/amtest/boards/ulx3s/gui_ui/common/test_common/fpga_gui_interface.py:8" *)
  input [15:0] counter;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:118" *)
  wire [23:0] delayed_inputs;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:83" *)
  wire [23:0] fifo_r_data;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:85" *)
  reg fifo_r_en = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:85" *)
  reg \fifo_r_en$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:84" *)
  wire fifo_r_rdy;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:78" *)
  reg [23:0] fifo_w_data = 24'h000000;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:78" *)
  reg [23:0] \fifo_w_data$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:80" *)
  reg fifo_w_en = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:80" *)
  reg \fifo_w_en$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:81" *)
  wire [7:0] fifo_w_level;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:79" *)
  wire fifo_w_rdy;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:112" *)
  wire [6:0] ila_buffer_r_addr;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:112" *)
  wire [23:0] ila_buffer_r_data;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:111" *)
  wire [6:0] ila_buffer_w_addr;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:111" *)
  wire [23:0] ila_buffer_w_data;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:111" *)
  wire ila_buffer_w_en;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:201" *)
  reg [1:0] ila_fifo_fsm_state = 2'h1;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:201" *)
  reg [1:0] \ila_fifo_fsm_state$next ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:117" *)
  wire [23:0] pretrigger_samples_synced_inputs;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:195" *)
  reg sampling;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:99" *)
  wire \sampling$2 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:97" *)
  input trigger;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:181" *)
  reg [6:0] write_position = 7'h00;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:181" *)
  reg [6:0] \write_position$next ;
  reg [23:0] ila_buffer [99:0];
  initial begin
    ila_buffer[0] = 24'h000000;
    ila_buffer[1] = 24'h000000;
    ila_buffer[2] = 24'h000000;
    ila_buffer[3] = 24'h000000;
    ila_buffer[4] = 24'h000000;
    ila_buffer[5] = 24'h000000;
    ila_buffer[6] = 24'h000000;
    ila_buffer[7] = 24'h000000;
    ila_buffer[8] = 24'h000000;
    ila_buffer[9] = 24'h000000;
    ila_buffer[10] = 24'h000000;
    ila_buffer[11] = 24'h000000;
    ila_buffer[12] = 24'h000000;
    ila_buffer[13] = 24'h000000;
    ila_buffer[14] = 24'h000000;
    ila_buffer[15] = 24'h000000;
    ila_buffer[16] = 24'h000000;
    ila_buffer[17] = 24'h000000;
    ila_buffer[18] = 24'h000000;
    ila_buffer[19] = 24'h000000;
    ila_buffer[20] = 24'h000000;
    ila_buffer[21] = 24'h000000;
    ila_buffer[22] = 24'h000000;
    ila_buffer[23] = 24'h000000;
    ila_buffer[24] = 24'h000000;
    ila_buffer[25] = 24'h000000;
    ila_buffer[26] = 24'h000000;
    ila_buffer[27] = 24'h000000;
    ila_buffer[28] = 24'h000000;
    ila_buffer[29] = 24'h000000;
    ila_buffer[30] = 24'h000000;
    ila_buffer[31] = 24'h000000;
    ila_buffer[32] = 24'h000000;
    ila_buffer[33] = 24'h000000;
    ila_buffer[34] = 24'h000000;
    ila_buffer[35] = 24'h000000;
    ila_buffer[36] = 24'h000000;
    ila_buffer[37] = 24'h000000;
    ila_buffer[38] = 24'h000000;
    ila_buffer[39] = 24'h000000;
    ila_buffer[40] = 24'h000000;
    ila_buffer[41] = 24'h000000;
    ila_buffer[42] = 24'h000000;
    ila_buffer[43] = 24'h000000;
    ila_buffer[44] = 24'h000000;
    ila_buffer[45] = 24'h000000;
    ila_buffer[46] = 24'h000000;
    ila_buffer[47] = 24'h000000;
    ila_buffer[48] = 24'h000000;
    ila_buffer[49] = 24'h000000;
    ila_buffer[50] = 24'h000000;
    ila_buffer[51] = 24'h000000;
    ila_buffer[52] = 24'h000000;
    ila_buffer[53] = 24'h000000;
    ila_buffer[54] = 24'h000000;
    ila_buffer[55] = 24'h000000;
    ila_buffer[56] = 24'h000000;
    ila_buffer[57] = 24'h000000;
    ila_buffer[58] = 24'h000000;
    ila_buffer[59] = 24'h000000;
    ila_buffer[60] = 24'h000000;
    ila_buffer[61] = 24'h000000;
    ila_buffer[62] = 24'h000000;
    ila_buffer[63] = 24'h000000;
    ila_buffer[64] = 24'h000000;
    ila_buffer[65] = 24'h000000;
    ila_buffer[66] = 24'h000000;
    ila_buffer[67] = 24'h000000;
    ila_buffer[68] = 24'h000000;
    ila_buffer[69] = 24'h000000;
    ila_buffer[70] = 24'h000000;
    ila_buffer[71] = 24'h000000;
    ila_buffer[72] = 24'h000000;
    ila_buffer[73] = 24'h000000;
    ila_buffer[74] = 24'h000000;
    ila_buffer[75] = 24'h000000;
    ila_buffer[76] = 24'h000000;
    ila_buffer[77] = 24'h000000;
    ila_buffer[78] = 24'h000000;
    ila_buffer[79] = 24'h000000;
    ila_buffer[80] = 24'h000000;
    ila_buffer[81] = 24'h000000;
    ila_buffer[82] = 24'h000000;
    ila_buffer[83] = 24'h000000;
    ila_buffer[84] = 24'h000000;
    ila_buffer[85] = 24'h000000;
    ila_buffer[86] = 24'h000000;
    ila_buffer[87] = 24'h000000;
    ila_buffer[88] = 24'h000000;
    ila_buffer[89] = 24'h000000;
    ila_buffer[90] = 24'h000000;
    ila_buffer[91] = 24'h000000;
    ila_buffer[92] = 24'h000000;
    ila_buffer[93] = 24'h000000;
    ila_buffer[94] = 24'h000000;
    ila_buffer[95] = 24'h000000;
    ila_buffer[96] = 24'h000000;
    ila_buffer[97] = 24'h000000;
    ila_buffer[98] = 24'h000000;
    ila_buffer[99] = 24'h000000;
  end
  always @(posedge clk) begin
    if (ila_buffer_w_en)
      ila_buffer[7'h00] <= 24'h000000;
  end
  assign ila_buffer_r_data = ila_buffer[7'h00];
  assign \$9  = fifo_w_level + (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *) 2'h2;
  assign \$11  = \$9  <= (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *) 7'h64;
  assign \$13  = fifo_w_rdy & (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *) \$11 ;
  assign \$15  = fifo_w_level + (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *) 2'h2;
  assign \$17  = \$15  <= (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *) 7'h64;
  assign \$19  = fifo_w_rdy & (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *) \$17 ;
  assign \$21  = fifo_w_level + (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *) 2'h2;
  assign \$23  = \$21  <= (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *) 7'h64;
  assign \$25  = fifo_w_rdy & (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *) \$23 ;
  assign \$27  = fifo_w_level + (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *) 2'h2;
  assign \$29  = \$27  <= (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *) 7'h64;
  assign \$31  = fifo_w_rdy & (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *) \$29 ;
  assign \$33  = fifo_w_level + (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *) 2'h2;
  assign \$35  = \$33  <= (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *) 7'h64;
  assign \$37  = fifo_w_rdy & (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *) \$35 ;
  assign \$3  = ! (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:202" *) ila_fifo_fsm_state;
  assign \$39  = \$sample$s$captured_sample_number$sync$1  + (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:258" *) 1'h1;
  assign \$41  = \$39  == (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:258" *) captured_sample_number;
  assign \$5  = \$sample$s$captured_sample_number$sync$1  + (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:258" *) 1'h1;
  assign \$7  = \$5  == (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:258" *) captured_sample_number;
  always @(posedge clk)
    \$sample$s$captured_sample_number$sync$1  <= captured_sample_number;
  always @(posedge clk)
    captured_sample <= \captured_sample$next ;
  always @(posedge clk)
    fifo_w_data <= \fifo_w_data$next ;
  always @(posedge clk)
    fifo_w_en <= \fifo_w_en$next ;
  always @(posedge clk)
    complete <= \complete$next ;
  always @(posedge clk)
    write_position <= \write_position$next ;
  always @(posedge clk)
    ila_fifo_fsm_state <= \ila_fifo_fsm_state$next ;
  always @(posedge clk)
    fifo_r_en <= \fifo_r_en$next ;
  fifo fifo (
    .clk(clk),
    .r_data(fifo_r_data),
    .r_en(fifo_r_en),
    .r_rdy(fifo_r_rdy),
    .w_data(fifo_w_data),
    .w_en(fifo_w_en),
    .w_level(fifo_w_level),
    .w_rdy(fifo_w_rdy)
  );
  pretrigger_samples pretrigger_samples (
    .clk(clk),
    .counter(counter),
    .synced_inputs(pretrigger_samples_synced_inputs)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$101 ) begin end
    \fifo_w_data$next  = fifo_w_data;
    (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:201" *)
    casez (ila_fifo_fsm_state)
      /* \amaranth.decoding  = "IDLE/1" */
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:205" */
      2'h1:
          /* empty */;
      /* \amaranth.decoding  = "CAPTURE/0" */
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:222" */
      2'h0:
          (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:226" *)
          casez (sampling)
            /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:226" */
            1'h1:
                (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *)
                casez ({ fifo_r_rdy, \$31  })
                  /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" */
                  2'b?1:
                      \fifo_w_data$next  = delayed_inputs;
                endcase
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$101 ) begin end
    \captured_sample$next  = captured_sample;
    (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:201" *)
    casez (ila_fifo_fsm_state)
      /* \amaranth.decoding  = "IDLE/1" */
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:205" */
      2'h1:
          /* empty */;
      /* \amaranth.decoding  = "CAPTURE/0" */
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:222" */
      2'h0:
          (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:226" *)
          casez (sampling)
            /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:226" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *)
                casez ({ fifo_r_rdy, \$37  })
                  /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" */
                  2'b?1:
                      /* empty */;
                  /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:239" */
                  2'b1?:
                      \captured_sample$next  = fifo_r_data;
                  /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:247" */
                  default:
                      \captured_sample$next  = 24'heebeee;
                endcase
          endcase
      /* \amaranth.decoding  = "READABLE/2" */
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:254" */
      2'h2:
          (* full_case = 32'd1 *)
          (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:256" *)
          casez (fifo_r_rdy)
            /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:256" */
            1'h1:
                (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:258" *)
                casez (\$41 )
                  /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:258" */
                  1'h1:
                      \captured_sample$next  = fifo_r_data;
                endcase
            /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:268" */
            default:
                \captured_sample$next  = 24'hadbeef;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$101 ) begin end
    sampling = 1'h0;
    (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:201" *)
    casez (ila_fifo_fsm_state)
      /* \amaranth.decoding  = "IDLE/1" */
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:205" */
      2'h1:
          sampling = 1'h0;
      /* \amaranth.decoding  = "CAPTURE/0" */
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:222" */
      2'h0:
          sampling = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$101 ) begin end
    \fifo_r_en$next  = fifo_r_en;
    (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:201" *)
    casez (ila_fifo_fsm_state)
      /* \amaranth.decoding  = "IDLE/1" */
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:205" */
      2'h1:
          (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:209" *)
          casez (fifo_r_rdy)
            /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:209" */
            1'h1:
                \fifo_r_en$next  = 1'h1;
          endcase
      /* \amaranth.decoding  = "CAPTURE/0" */
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:222" */
      2'h0:
          /* empty */;
      /* \amaranth.decoding  = "READABLE/2" */
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:254" */
      2'h2:
          (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:256" *)
          casez (fifo_r_rdy)
            /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:256" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:258" *)
                casez (\$7 )
                  /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:258" */
                  1'h1:
                      \fifo_r_en$next  = 1'h1;
                  /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:263" */
                  default:
                      \fifo_r_en$next  = 1'h0;
                endcase
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$101 ) begin end
    \ila_fifo_fsm_state$next  = ila_fifo_fsm_state;
    (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:201" *)
    casez (ila_fifo_fsm_state)
      /* \amaranth.decoding  = "IDLE/1" */
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:205" */
      2'h1:
          (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:212" *)
          casez (trigger)
            /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:212" */
            1'h1:
                (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:213" *)
                casez (fifo_w_rdy)
                  /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:213" */
                  1'h1:
                      \ila_fifo_fsm_state$next  = 2'h0;
                endcase
          endcase
      /* \amaranth.decoding  = "CAPTURE/0" */
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:222" */
      2'h0:
          (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:226" *)
          casez (sampling)
            /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:226" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *)
                casez ({ fifo_r_rdy, \$13  })
                  /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" */
                  2'b?1:
                      /* empty */;
                  /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:239" */
                  2'b1?:
                      \ila_fifo_fsm_state$next  = 2'h2;
                  /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:247" */
                  default:
                      \ila_fifo_fsm_state$next  = 2'h1;
                endcase
          endcase
      /* \amaranth.decoding  = "READABLE/2" */
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:254" */
      2'h2:
          (* full_case = 32'd1 *)
          (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:256" *)
          casez (fifo_r_rdy)
            /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:256" */
            1'h1:
                /* empty */;
            /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:268" */
            default:
                \ila_fifo_fsm_state$next  = 2'h1;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$101 ) begin end
    \write_position$next  = write_position;
    (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:201" *)
    casez (ila_fifo_fsm_state)
      /* \amaranth.decoding  = "IDLE/1" */
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:205" */
      2'h1:
          (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:212" *)
          casez (trigger)
            /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:212" */
            1'h1:
                \write_position$next  = 7'h00;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$101 ) begin end
    \complete$next  = complete;
    (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:201" *)
    casez (ila_fifo_fsm_state)
      /* \amaranth.decoding  = "IDLE/1" */
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:205" */
      2'h1:
          (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:212" *)
          casez (trigger)
            /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:212" */
            1'h1:
                \complete$next  = 1'h0;
          endcase
      /* \amaranth.decoding  = "CAPTURE/0" */
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:222" */
      2'h0:
          (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:226" *)
          casez (sampling)
            /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:226" */
            1'h1:
                (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *)
                casez ({ fifo_r_rdy, \$19  })
                  /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" */
                  2'b?1:
                      /* empty */;
                  /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:239" */
                  2'b1?:
                      \complete$next  = 1'h1;
                endcase
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$101 ) begin end
    \fifo_w_en$next  = fifo_w_en;
    (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:201" *)
    casez (ila_fifo_fsm_state)
      /* \amaranth.decoding  = "IDLE/1" */
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:205" */
      2'h1:
          /* empty */;
      /* \amaranth.decoding  = "CAPTURE/0" */
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:222" */
      2'h0:
          (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:226" *)
          casez (sampling)
            /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:226" */
            1'h1:
                (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" *)
                casez ({ fifo_r_rdy, \$25  })
                  /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:233" */
                  2'b?1:
                      \fifo_w_en$next  = 1'h1;
                  /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:239" */
                  2'b1?:
                      \fifo_w_en$next  = 1'h0;
                endcase
          endcase
    endcase
  end
  assign ila_buffer_w_addr = 7'h00;
  assign ila_buffer_w_data = 24'h000000;
  assign ila_buffer_r_addr = 7'h00;
  assign \$sample$s$captured_sample_number$sync$1$next  = captured_sample_number;
  assign capturing = \$3 ;
  assign \sampling$2  = sampling;
  assign ila_buffer_w_en = sampling;
  assign delayed_inputs = pretrigger_samples_synced_inputs;
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$0.interface" *)
(* generator = "Amaranth" *)
module \interface (spi_device__sck, spi_device__sdi, spi_device__sdo, spi_device__cs, idle, stalled, command, word_received, word_complete, word_to_send, clk);
  reg \$auto$verilog_backend.cc:2083:dump_module$102  = 0;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:548" *)
  wire \$1 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:544" *)
  wire \$11 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:548" *)
  wire \$13 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:580" *)
  wire \$15 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:586" *)
  wire \$17 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:548" *)
  wire \$19 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *)
  wire \$21 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *)
  wire \$23 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:551" *)
  wire [5:0] \$25 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:551" *)
  wire [5:0] \$26 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:586" *)
  wire \$28 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:586" *)
  wire \$3 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *)
  wire \$30 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *)
  wire \$32 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:589" *)
  wire [5:0] \$34 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:589" *)
  wire [5:0] \$35 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:548" *)
  wire \$37 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *)
  wire \$39 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *)
  wire \$41 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:548" *)
  wire \$43 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:586" *)
  wire \$45 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *)
  wire \$47 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *)
  wire \$49 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:518" *)
  wire \$5 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:586" *)
  wire \$51 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:519" *)
  wire \$7 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:527" *)
  wire \$9 ;
  (* \amaranth.sample_reg  = 32'd1 *)
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:499" *)
  reg \$sample$s$spi_device__sck$sync$1  = 1'h0;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:499" *)
  wire \$sample$s$spi_device__sck$sync$1$next ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:503" *)
  reg [4:0] bit_count = 5'h00;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:503" *)
  reg [4:0] \bit_count$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:349" *)
  input clk;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:474" *)
  output [7:0] command;
  reg [7:0] command = 8'h00;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:474" *)
  reg [7:0] \command$next ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:475" *)
  reg command_ready = 1'h0;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:475" *)
  reg \command_ready$next ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:506" *)
  reg [7:0] current_command = 8'h00;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:506" *)
  reg [7:0] \current_command$next ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:507" *)
  reg [15:0] current_word = 16'h0000;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:507" *)
  reg [15:0] \current_word$next ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:516" *)
  reg [2:0] fsm_state = 3'h1;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:516" *)
  reg [2:0] \fsm_state$next ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:483" *)
  output idle;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  input spi_device__cs;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:499" *)
  input spi_device__sck;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  input spi_device__sdi;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  output spi_device__sdo;
  reg spi_device__sdo = 1'h0;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  reg \spi_device__sdo$next ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:484" *)
  output stalled;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:480" *)
  output word_complete;
  reg word_complete = 1'h0;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:480" *)
  reg \word_complete$next ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:478" *)
  output [15:0] word_received;
  reg [15:0] word_received = 16'h0000;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:478" *)
  reg [15:0] \word_received$next ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:479" *)
  input [15:0] word_to_send;
  assign \$9  = ~ (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:527" *) spi_device__cs;
  assign \$11  = ~ (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:544" *) spi_device__cs;
  assign \$13  = bit_count < (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:548" *) 4'h8;
  assign \$15  = ~ (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:580" *) spi_device__cs;
  assign \$17  = bit_count < (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:586" *) 5'h10;
  assign \$1  = bit_count < (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:548" *) 4'h8;
  assign \$19  = bit_count < (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:548" *) 4'h8;
  assign \$21  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *) spi_device__sck;
  assign \$23  = \$sample$s$spi_device__sck$sync$1  & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *) \$21 ;
  assign \$26  = bit_count + (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:551" *) 1'h1;
  assign \$28  = bit_count < (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:586" *) 5'h10;
  assign \$30  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *) spi_device__sck;
  assign \$32  = \$sample$s$spi_device__sck$sync$1  & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *) \$30 ;
  assign \$35  = bit_count + (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:589" *) 1'h1;
  assign \$37  = bit_count < (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:548" *) 4'h8;
  assign \$3  = bit_count < (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:586" *) 5'h10;
  assign \$39  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *) spi_device__sck;
  assign \$41  = \$sample$s$spi_device__sck$sync$1  & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *) \$39 ;
  assign \$43  = bit_count < (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:548" *) 4'h8;
  assign \$45  = bit_count < (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:586" *) 5'h10;
  assign \$47  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *) spi_device__sck;
  assign \$49  = \$sample$s$spi_device__sck$sync$1  & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *) \$47 ;
  assign \$51  = bit_count < (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:586" *) 5'h10;
  assign \$5  = ! (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:518" *) fsm_state;
  assign \$7  = fsm_state == (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:519" *) 1'h1;
  always @(posedge clk)
    \$sample$s$spi_device__sck$sync$1  <= spi_device__sck;
  always @(posedge clk)
    word_received <= \word_received$next ;
  always @(posedge clk)
    spi_device__sdo <= \spi_device__sdo$next ;
  always @(posedge clk)
    current_word <= \current_word$next ;
  always @(posedge clk)
    command <= \command$next ;
  always @(posedge clk)
    current_command <= \current_command$next ;
  always @(posedge clk)
    bit_count <= \bit_count$next ;
  always @(posedge clk)
    fsm_state <= \fsm_state$next ;
  always @(posedge clk)
    word_complete <= \word_complete$next ;
  always @(posedge clk)
    command_ready <= \command_ready$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$102 ) begin end
    \command_ready$next  = 1'h0;
    (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:516" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "STALL/1" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:524" */
      3'h1:
          /* empty */;
      /* \amaranth.decoding  = "IDLE/0" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:533" */
      3'h0:
          /* empty */;
      /* \amaranth.decoding  = "RECEIVE_COMMAND/2" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:541" */
      3'h2:
          (* full_case = 32'd1 *)
          (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:548" *)
          casez (\$1 )
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:548" */
            1'h1:
                /* empty */;
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:556" */
            default:
                \command_ready$next  = 1'h1;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$102 ) begin end
    \word_complete$next  = 1'h0;
    (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:516" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "STALL/1" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:524" */
      3'h1:
          /* empty */;
      /* \amaranth.decoding  = "IDLE/0" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:533" */
      3'h0:
          /* empty */;
      /* \amaranth.decoding  = "RECEIVE_COMMAND/2" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:541" */
      3'h2:
          /* empty */;
      /* \amaranth.decoding  = "PROCESSING/3" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:566" */
      3'h3:
          /* empty */;
      /* \amaranth.decoding  = "LATCH_OUTPUT/4" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:571" */
      3'h4:
          /* empty */;
      /* \amaranth.decoding  = "SHIFT_DATA/5" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:577" */
      3'h5:
          (* full_case = 32'd1 *)
          (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:586" *)
          casez (\$3 )
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:586" */
            1'h1:
                /* empty */;
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:594" */
            default:
                \word_complete$next  = 1'h1;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$102 ) begin end
    \word_received$next  = word_received;
    (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:516" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "STALL/1" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:524" */
      3'h1:
          /* empty */;
      /* \amaranth.decoding  = "IDLE/0" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:533" */
      3'h0:
          /* empty */;
      /* \amaranth.decoding  = "RECEIVE_COMMAND/2" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:541" */
      3'h2:
          /* empty */;
      /* \amaranth.decoding  = "PROCESSING/3" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:566" */
      3'h3:
          /* empty */;
      /* \amaranth.decoding  = "LATCH_OUTPUT/4" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:571" */
      3'h4:
          /* empty */;
      /* \amaranth.decoding  = "SHIFT_DATA/5" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:577" */
      3'h5:
          (* full_case = 32'd1 *)
          (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:586" *)
          casez (\$51 )
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:586" */
            1'h1:
                /* empty */;
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:594" */
            default:
                \word_received$next  = current_word;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$102 ) begin end
    \fsm_state$next  = fsm_state;
    (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:516" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "STALL/1" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:524" */
      3'h1:
          (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:527" *)
          casez (\$9 )
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:527" */
            1'h1:
                \fsm_state$next  = 3'h0;
          endcase
      /* \amaranth.decoding  = "IDLE/0" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:533" */
      3'h0:
          (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:536" *)
          casez (spi_device__cs)
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:536" */
            1'h1:
                \fsm_state$next  = 3'h2;
          endcase
      /* \amaranth.decoding  = "RECEIVE_COMMAND/2" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:541" */
      3'h2:
        begin
          (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:544" *)
          casez (\$11 )
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:544" */
            1'h1:
                \fsm_state$next  = 3'h0;
          endcase
          (* full_case = 32'd1 *)
          (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:548" *)
          casez (\$13 )
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:548" */
            1'h1:
                /* empty */;
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:556" */
            default:
                \fsm_state$next  = 3'h3;
          endcase
        end
      /* \amaranth.decoding  = "PROCESSING/3" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:566" */
      3'h3:
          \fsm_state$next  = 3'h4;
      /* \amaranth.decoding  = "LATCH_OUTPUT/4" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:571" */
      3'h4:
          \fsm_state$next  = 3'h5;
      /* \amaranth.decoding  = "SHIFT_DATA/5" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:577" */
      3'h5:
        begin
          (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:580" *)
          casez (\$15 )
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:580" */
            1'h1:
                \fsm_state$next  = 3'h0;
          endcase
          (* full_case = 32'd1 *)
          (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:586" *)
          casez (\$17 )
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:586" */
            1'h1:
                /* empty */;
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:594" */
            default:
                \fsm_state$next  = 3'h1;
          endcase
        end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$102 ) begin end
    \bit_count$next  = bit_count;
    (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:516" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "STALL/1" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:524" */
      3'h1:
          /* empty */;
      /* \amaranth.decoding  = "IDLE/0" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:533" */
      3'h0:
          \bit_count$next  = 5'h00;
      /* \amaranth.decoding  = "RECEIVE_COMMAND/2" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:541" */
      3'h2:
          (* full_case = 32'd1 *)
          (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:548" *)
          casez (\$19 )
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:548" */
            1'h1:
                (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:549" *)
                casez (\$23 )
                  /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:549" */
                  1'h1:
                      \bit_count$next  = \$26 [4:0];
                endcase
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:556" */
            default:
                \bit_count$next  = 5'h00;
          endcase
      /* \amaranth.decoding  = "PROCESSING/3" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:566" */
      3'h3:
          /* empty */;
      /* \amaranth.decoding  = "LATCH_OUTPUT/4" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:571" */
      3'h4:
          /* empty */;
      /* \amaranth.decoding  = "SHIFT_DATA/5" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:577" */
      3'h5:
          (* full_case = 32'd1 *)
          (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:586" *)
          casez (\$28 )
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:586" */
            1'h1:
                (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:587" *)
                casez (\$32 )
                  /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:587" */
                  1'h1:
                      \bit_count$next  = \$35 [4:0];
                endcase
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:594" */
            default:
                \bit_count$next  = 5'h00;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$102 ) begin end
    \current_command$next  = current_command;
    (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:516" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "STALL/1" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:524" */
      3'h1:
          /* empty */;
      /* \amaranth.decoding  = "IDLE/0" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:533" */
      3'h0:
          /* empty */;
      /* \amaranth.decoding  = "RECEIVE_COMMAND/2" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:541" */
      3'h2:
          (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:548" *)
          casez (\$37 )
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:548" */
            1'h1:
                (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:549" *)
                casez (\$41 )
                  /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:549" */
                  1'h1:
                      \current_command$next  = { current_command[6:0], spi_device__sdi };
                endcase
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$102 ) begin end
    \command$next  = command;
    (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:516" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "STALL/1" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:524" */
      3'h1:
          /* empty */;
      /* \amaranth.decoding  = "IDLE/0" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:533" */
      3'h0:
          /* empty */;
      /* \amaranth.decoding  = "RECEIVE_COMMAND/2" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:541" */
      3'h2:
          (* full_case = 32'd1 *)
          (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:548" *)
          casez (\$43 )
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:548" */
            1'h1:
                /* empty */;
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:556" */
            default:
                \command$next  = current_command;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$102 ) begin end
    \current_word$next  = current_word;
    (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:516" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "STALL/1" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:524" */
      3'h1:
          /* empty */;
      /* \amaranth.decoding  = "IDLE/0" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:533" */
      3'h0:
          /* empty */;
      /* \amaranth.decoding  = "RECEIVE_COMMAND/2" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:541" */
      3'h2:
          /* empty */;
      /* \amaranth.decoding  = "PROCESSING/3" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:566" */
      3'h3:
          /* empty */;
      /* \amaranth.decoding  = "LATCH_OUTPUT/4" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:571" */
      3'h4:
          \current_word$next  = word_to_send;
      /* \amaranth.decoding  = "SHIFT_DATA/5" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:577" */
      3'h5:
          (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:586" *)
          casez (\$45 )
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:586" */
            1'h1:
                (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:587" *)
                casez (\$49 )
                  /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:587" */
                  1'h1:
                      \current_word$next  = { current_word[14:0], spi_device__sdi };
                endcase
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$102 ) begin end
    \spi_device__sdo$next  = spi_device__sdo;
    (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:516" *)
    casez (fsm_state)
      /* \amaranth.decoding  = "STALL/1" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:524" */
      3'h1:
          /* empty */;
      /* \amaranth.decoding  = "IDLE/0" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:533" */
      3'h0:
          /* empty */;
      /* \amaranth.decoding  = "RECEIVE_COMMAND/2" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:541" */
      3'h2:
          /* empty */;
      /* \amaranth.decoding  = "PROCESSING/3" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:566" */
      3'h3:
          /* empty */;
      /* \amaranth.decoding  = "LATCH_OUTPUT/4" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:571" */
      3'h4:
          /* empty */;
      /* \amaranth.decoding  = "SHIFT_DATA/5" */
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:577" */
      3'h5:
          \spi_device__sdo$next  = current_word[15];
    endcase
  end
  assign \$25  = \$26 ;
  assign \$34  = \$35 ;
  assign \$sample$s$spi_device__sck$sync$1$next  = spi_device__sck;
  assign stalled = \$7 ;
  assign idle = \$5 ;
endmodule

(* \amaranth.hierarchy  = "top.dut.mux" *)
(* generator = "Amaranth" *)
module mux(spi_device__sdi, spi_device__sdo, \spi_device__sck$1 , \spi_device__sdi$2 , \spi_device__sdo$3 , spi_device__cs, \spi_device__sck$4 , \spi_device__cs$5 , \spi_device__sdi$6 , \spi_device__sdo$7 , spi_device__sck);
  reg \$auto$verilog_backend.cc:2083:dump_module$103  = 0;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  input spi_device__cs;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  input \spi_device__cs$5 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  input spi_device__sck;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  output \spi_device__sck$1 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:500" *)
  output \spi_device__sck$4 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  input spi_device__sdi;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  output \spi_device__sdi$2 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  output \spi_device__sdi$6 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  output spi_device__sdo;
  reg spi_device__sdo;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  input \spi_device__sdo$3 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  input \spi_device__sdo$7 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$103 ) begin end
    spi_device__sdo = 1'h0;
    (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:979" *)
    casez ({ \spi_device__cs$5 , spi_device__cs })
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:979" */
      2'b?1:
          spi_device__sdo = \spi_device__sdo$3 ;
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:979" */
      2'b1?:
          spi_device__sdo = \spi_device__sdo$7 ;
    endcase
  end
  assign \spi_device__sdi$6  = spi_device__sdi;
  assign \spi_device__sck$4  = spi_device__sck;
  assign \spi_device__sdi$2  = spi_device__sdi;
  assign \spi_device__sck$1  = spi_device__sck;
endmodule

(* \amaranth.hierarchy  = "top.pin_button_down_0" *)
(* generator = "Amaranth" *)
module pin_button_down_0(button_down_0__io);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire button_down_0__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input button_down_0__io;
  IB button_down_0_0 (
    .I(button_down_0__io),
    .O(button_down_0__i)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_button_fire_0" *)
(* generator = "Amaranth" *)
module pin_button_fire_0(button_fire_0__io, button_fire_0__i);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  output button_fire_0__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input button_fire_0__io;
  IB button_fire_0_0 (
    .I(button_fire_0__io),
    .O(button_fire_0__i)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_button_fire_1" *)
(* generator = "Amaranth" *)
module pin_button_fire_1(button_fire_1__io, button_fire_1__i);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  output button_fire_1__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input button_fire_1__io;
  IB button_fire_1_0 (
    .I(button_fire_1__io),
    .O(button_fire_1__i)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_button_left_0" *)
(* generator = "Amaranth" *)
module pin_button_left_0(button_left_0__io);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire button_left_0__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input button_left_0__io;
  IB button_left_0_0 (
    .I(button_left_0__io),
    .O(button_left_0__i)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_button_pwr_0" *)
(* generator = "Amaranth" *)
module pin_button_pwr_0(button_pwr_0__io, button_pwr_0__i);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:465" *)
  wire \$1 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  output button_pwr_0__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:464" *)
  wire button_pwr_0__i_n;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input button_pwr_0__io;
  assign \$1  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:465" *) button_pwr_0__i_n;
  IB button_pwr_0_0 (
    .I(button_pwr_0__io),
    .O(button_pwr_0__i_n)
  );
  assign button_pwr_0__i = \$1 ;
endmodule

(* \amaranth.hierarchy  = "top.pin_button_right_0" *)
(* generator = "Amaranth" *)
module pin_button_right_0(button_right_0__io);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire button_right_0__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input button_right_0__io;
  IB button_right_0_0 (
    .I(button_right_0__io),
    .O(button_right_0__i)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_button_up_0" *)
(* generator = "Amaranth" *)
module pin_button_up_0(button_up_0__io);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire button_up_0__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input button_up_0__io;
  IB button_up_0_0 (
    .I(button_up_0__io),
    .O(button_up_0__i)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_clk25_0" *)
(* generator = "Amaranth" *)
module pin_clk25_0(clk25_0__io, clk25_0__i);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  output clk25_0__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input clk25_0__io;
  IB clk25_0_0 (
    .I(clk25_0__io),
    .O(clk25_0__i)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_esp32_spi_0__en" *)
(* generator = "Amaranth" *)
module pin_esp32_spi_0__en(esp32_spi_0__en__io, esp32_spi_0__en__o);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output esp32_spi_0__en__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input esp32_spi_0__en__o;
  OB esp32_spi_0__en_0 (
    .I(esp32_spi_0__en__o),
    .O(esp32_spi_0__en__io)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_esp32_spi_0__gpio0" *)
(* generator = "Amaranth" *)
module pin_esp32_spi_0__gpio0(esp32_spi_0__gpio0__io, esp32_spi_0__gpio0__o);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:531" *)
  wire \$1 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire esp32_spi_0__gpio0__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  inout esp32_spi_0__gpio0__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input esp32_spi_0__gpio0__o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire esp32_spi_0__gpio0__oe;
  BB esp32_spi_0__gpio0_0 (
    .B(esp32_spi_0__gpio0__io),
    .I(esp32_spi_0__gpio0__o),
    .O(esp32_spi_0__gpio0__i),
    .T(1'h1)
  );
  assign esp32_spi_0__gpio0__oe = 1'h0;
  assign \$1  = 1'h1;
endmodule

(* \amaranth.hierarchy  = "top.pin_esp32_spi_0__gpio12_cipo" *)
(* generator = "Amaranth" *)
module pin_esp32_spi_0__gpio12_cipo(esp32_spi_0__gpio12_cipo__io, esp32_spi_0__gpio12_cipo__o);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output esp32_spi_0__gpio12_cipo__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input esp32_spi_0__gpio12_cipo__o;
  OB esp32_spi_0__gpio12_cipo_0 (
    .I(esp32_spi_0__gpio12_cipo__o),
    .O(esp32_spi_0__gpio12_cipo__io)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_esp32_spi_0__gpio16_sclk" *)
(* generator = "Amaranth" *)
module pin_esp32_spi_0__gpio16_sclk(esp32_spi_0__gpio16_sclk__io, esp32_spi_0__gpio16_sclk__i);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  output esp32_spi_0__gpio16_sclk__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input esp32_spi_0__gpio16_sclk__io;
  IB esp32_spi_0__gpio16_sclk_0 (
    .I(esp32_spi_0__gpio16_sclk__io),
    .O(esp32_spi_0__gpio16_sclk__i)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_esp32_spi_0__gpio4_copi" *)
(* generator = "Amaranth" *)
module pin_esp32_spi_0__gpio4_copi(esp32_spi_0__gpio4_copi__io, esp32_spi_0__gpio4_copi__i);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  output esp32_spi_0__gpio4_copi__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input esp32_spi_0__gpio4_copi__io;
  IB esp32_spi_0__gpio4_copi_0 (
    .I(esp32_spi_0__gpio4_copi__io),
    .O(esp32_spi_0__gpio4_copi__i)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_esp32_spi_0__gpio5_cs" *)
(* generator = "Amaranth" *)
module pin_esp32_spi_0__gpio5_cs(esp32_spi_0__gpio5_cs__io, esp32_spi_0__gpio5_cs__i);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:465" *)
  wire \$1 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  output esp32_spi_0__gpio5_cs__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:464" *)
  wire esp32_spi_0__gpio5_cs__i_n;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input esp32_spi_0__gpio5_cs__io;
  assign \$1  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:465" *) esp32_spi_0__gpio5_cs__i_n;
  IB esp32_spi_0__gpio5_cs_0 (
    .I(esp32_spi_0__gpio5_cs__io),
    .O(esp32_spi_0__gpio5_cs__i_n)
  );
  assign esp32_spi_0__gpio5_cs__i = \$1 ;
endmodule

(* \amaranth.hierarchy  = "top.pin_esp32_spi_0__rx" *)
(* generator = "Amaranth" *)
module pin_esp32_spi_0__rx(esp32_spi_0__rx__io, esp32_spi_0__rx__i);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  output esp32_spi_0__rx__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input esp32_spi_0__rx__io;
  IB esp32_spi_0__rx_0 (
    .I(esp32_spi_0__rx__io),
    .O(esp32_spi_0__rx__i)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_esp32_spi_0__tx" *)
(* generator = "Amaranth" *)
module pin_esp32_spi_0__tx(esp32_spi_0__tx__io, esp32_spi_0__tx__o);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output esp32_spi_0__tx__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input esp32_spi_0__tx__o;
  OB esp32_spi_0__tx_0 (
    .I(esp32_spi_0__tx__o),
    .O(esp32_spi_0__tx__io)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_led_0" *)
(* generator = "Amaranth" *)
module pin_led_0(led_0__io, led_0__o);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output led_0__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input led_0__o;
  OB led_0_0 (
    .I(led_0__o),
    .O(led_0__io)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_led_1" *)
(* generator = "Amaranth" *)
module pin_led_1(led_1__io, led_1__o);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output led_1__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input led_1__o;
  OB led_1_0 (
    .I(led_1__o),
    .O(led_1__io)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_led_2" *)
(* generator = "Amaranth" *)
module pin_led_2(led_2__io, led_2__o);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output led_2__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input led_2__o;
  OB led_2_0 (
    .I(led_2__o),
    .O(led_2__io)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_led_3" *)
(* generator = "Amaranth" *)
module pin_led_3(led_3__io, led_3__o);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output led_3__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input led_3__o;
  OB led_3_0 (
    .I(led_3__o),
    .O(led_3__io)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_led_4" *)
(* generator = "Amaranth" *)
module pin_led_4(led_4__io, led_4__o);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output led_4__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input led_4__o;
  OB led_4_0 (
    .I(led_4__o),
    .O(led_4__io)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_led_5" *)
(* generator = "Amaranth" *)
module pin_led_5(led_5__io, led_5__o);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output led_5__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input led_5__o;
  OB led_5_0 (
    .I(led_5__o),
    .O(led_5__io)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_led_6" *)
(* generator = "Amaranth" *)
module pin_led_6(led_6__io, led_6__o);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output led_6__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input led_6__o;
  OB led_6_0 (
    .I(led_6__o),
    .O(led_6__io)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_led_7" *)
(* generator = "Amaranth" *)
module pin_led_7(led_7__io, led_7__o);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output led_7__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input led_7__o;
  OB led_7_0 (
    .I(led_7__o),
    .O(led_7__io)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_uart_0__dtr" *)
(* generator = "Amaranth" *)
module pin_uart_0__dtr(uart_0__dtr__io, uart_0__dtr__i);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  output uart_0__dtr__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input uart_0__dtr__io;
  IB uart_0__dtr_0 (
    .I(uart_0__dtr__io),
    .O(uart_0__dtr__i)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_uart_0__rts" *)
(* generator = "Amaranth" *)
module pin_uart_0__rts(uart_0__rts__io, uart_0__rts__i);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  output uart_0__rts__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input uart_0__rts__io;
  IB uart_0__rts_0 (
    .I(uart_0__rts__io),
    .O(uart_0__rts__i)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_uart_0__rx" *)
(* generator = "Amaranth" *)
module pin_uart_0__rx(uart_0__rx__io, uart_0__rx__i);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  output uart_0__rx__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input uart_0__rx__io;
  IB uart_0__rx_0 (
    .I(uart_0__rx__io),
    .O(uart_0__rx__i)
  );
endmodule

(* \amaranth.hierarchy  = "top.pin_uart_0__tx" *)
(* generator = "Amaranth" *)
module pin_uart_0__tx(uart_0__tx__io, uart_0__tx__o);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output uart_0__tx__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  input uart_0__tx__o;
  OB uart_0__tx_0 (
    .I(uart_0__tx__o),
    .O(uart_0__tx__io)
  );
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$1.ila.pretrigger_samples" *)
(* generator = "Amaranth" *)
module pretrigger_samples(clk, synced_inputs, counter);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:349" *)
  input clk;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/gateware/amtest/amtest/boards/ulx3s/gui_ui/common/test_common/fpga_gui_interface.py:10" *)
  wire [7:0] const_0xAB;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/gateware/amtest/amtest/boards/ulx3s/gui_ui/common/test_common/fpga_gui_interface.py:8" *)
  input [15:0] counter;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg [23:0] stage0 = 24'h000000;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire [23:0] \stage0$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg [23:0] stage1 = 24'h000000;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire [23:0] \stage1$next ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:117" *)
  output [23:0] synced_inputs;
  always @(posedge clk)
    stage1 <= stage0;
  always @(posedge clk)
    stage0 <= { 8'hab, counter };
  assign const_0xAB = 8'hab;
  assign synced_inputs = stage1;
  assign \stage1$next  = stage0;
  assign \stage0$next  = { 8'hab, counter };
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$0.unbuffered.produce_cdc" *)
(* generator = "Amaranth" *)
module produce_cdc(produce_w_gry, produce_r_gry, clk);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:349" *)
  input clk;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:345" *)
  output [5:0] produce_r_gry;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:344" *)
  input [5:0] produce_w_gry;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg [5:0] stage0 = 6'h00;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire [5:0] \stage0$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg [5:0] stage1 = 6'h00;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire [5:0] \stage1$next ;
  always @(posedge clk)
    stage1 <= stage0;
  always @(posedge clk)
    stage0 <= produce_w_gry;
  assign produce_r_gry = stage1;
  assign \stage1$next  = stage0;
  assign \stage0$next  = produce_w_gry;
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$1.ila.fifo.unbuffered.produce_cdc" *)
(* generator = "Amaranth" *)
module \produce_cdc$3 (produce_w_gry, produce_r_gry, clk);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:349" *)
  input clk;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:345" *)
  output [7:0] produce_r_gry;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:344" *)
  input [7:0] produce_w_gry;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg [7:0] stage0 = 8'h00;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire [7:0] \stage0$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  reg [7:0] stage1 = 8'h00;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:89" *)
  wire [7:0] \stage1$next ;
  always @(posedge clk)
    stage1 <= stage0;
  always @(posedge clk)
    stage0 <= produce_w_gry;
  assign produce_r_gry = stage1;
  assign \stage1$next  = stage0;
  assign \stage0$next  = produce_w_gry;
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$0.unbuffered.produce_dec" *)
(* generator = "Amaranth" *)
module produce_dec(o, i);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$1 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$3 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$5 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$7 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$9 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:176" *)
  input [5:0] i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:177" *)
  output [5:0] o;
  assign \$9  = o[1] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[0];
  assign \$1  = o[5] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[4];
  assign \$3  = o[4] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[3];
  assign \$5  = o[3] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[2];
  assign \$7  = o[2] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[1];
  assign o[0] = \$9 ;
  assign o[1] = \$7 ;
  assign o[2] = \$5 ;
  assign o[3] = \$3 ;
  assign o[4] = \$1 ;
  assign o[5] = i[5];
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$1.ila.fifo.unbuffered.produce_dec" *)
(* generator = "Amaranth" *)
module \produce_dec$7 (o, i);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$1 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$11 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$13 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$3 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$5 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$7 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$9 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:176" *)
  input [7:0] i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:177" *)
  output [7:0] o;
  assign \$9  = o[3] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[2];
  assign \$11  = o[2] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[1];
  assign \$13  = o[1] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[0];
  assign \$1  = o[7] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[6];
  assign \$3  = o[6] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[5];
  assign \$5  = o[5] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[4];
  assign \$7  = o[4] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[3];
  assign o[0] = \$13 ;
  assign o[1] = \$11 ;
  assign o[2] = \$9 ;
  assign o[3] = \$7 ;
  assign o[4] = \$5 ;
  assign o[5] = \$3 ;
  assign o[6] = \$1 ;
  assign o[7] = i[7];
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$0.unbuffered.produce_enc" *)
(* generator = "Amaranth" *)
module produce_enc(o, i);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:154" *)
  wire [5:0] \$1 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:149" *)
  input [5:0] i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:150" *)
  output [5:0] o;
  assign \$1  = i ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:154" *) i[5:1];
  assign o = \$1 ;
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$1.ila.fifo.unbuffered.produce_enc" *)
(* generator = "Amaranth" *)
module \produce_enc$2 (o, i);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:154" *)
  wire [7:0] \$1 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:149" *)
  input [7:0] i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:150" *)
  output [7:0] o;
  assign \$1  = i ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:154" *) i[7:1];
  assign o = \$1 ;
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$0.unbuffered.rst_cdc" *)
(* generator = "Amaranth" *)
module rst_cdc(r_rst, clk);
  reg \$auto$verilog_backend.cc:2083:dump_module$104  = 0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:163" *)
  wire async_ff_clk;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:163" *)
  wire async_ff_rst;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:349" *)
  input clk;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:415" *)
  output r_rst;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:164" *)
  reg stage0 = 1'h1;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:164" *)
  reg \stage0$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:164" *)
  reg stage1 = 1'h1;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:164" *)
  reg \stage1$next ;
  wire _0_ = 1'h0;
  always @(posedge async_ff_clk, posedge _0_)
    if (_0_) stage1 <= 1'h1;
    else stage1 <= \stage1$next ;
  wire _1_ = 1'h0;
  always @(posedge async_ff_clk, posedge _1_)
    if (_1_) stage0 <= 1'h1;
    else stage0 <= \stage0$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$104 ) begin end
    \stage0$next  = 1'h0;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$104 ) begin end
    \stage1$next  = stage0;
  end
  assign r_rst = stage1;
  assign async_ff_clk = clk;
  assign async_ff_rst = 1'h0;
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$1.ila.fifo.unbuffered.rst_cdc" *)
(* generator = "Amaranth" *)
module \rst_cdc$8 (r_rst, clk);
  reg \$auto$verilog_backend.cc:2083:dump_module$105  = 0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:163" *)
  wire async_ff_clk;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:163" *)
  wire async_ff_rst;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:349" *)
  input clk;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:415" *)
  output r_rst;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:164" *)
  reg stage0 = 1'h1;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:164" *)
  reg \stage0$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:164" *)
  reg stage1 = 1'h1;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/cdc.py:164" *)
  reg \stage1$next ;
  wire _0_ = 1'h0;
  always @(posedge async_ff_clk, posedge _0_)
    if (_0_) stage1 <= 1'h1;
    else stage1 <= \stage1$next ;
  wire _1_ = 1'h0;
  always @(posedge async_ff_clk, posedge _1_)
    if (_1_) stage0 <= 1'h1;
    else stage0 <= \stage0$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$105 ) begin end
    \stage0$next  = 1'h0;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$105 ) begin end
    \stage1$next  = stage0;
  end
  assign r_rst = stage1;
  assign async_ff_clk = clk;
  assign async_ff_rst = 1'h0;
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$0.unbuffered.rst_dec" *)
(* generator = "Amaranth" *)
module rst_dec(o, i);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$1 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$3 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$5 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$7 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$9 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:176" *)
  input [5:0] i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:177" *)
  output [5:0] o;
  assign \$9  = o[1] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[0];
  assign \$1  = o[5] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[4];
  assign \$3  = o[4] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[3];
  assign \$5  = o[3] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[2];
  assign \$7  = o[2] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[1];
  assign o[0] = \$9 ;
  assign o[1] = \$7 ;
  assign o[2] = \$5 ;
  assign o[3] = \$3 ;
  assign o[4] = \$1 ;
  assign o[5] = i[5];
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$1.ila.fifo.unbuffered.rst_dec" *)
(* generator = "Amaranth" *)
module \rst_dec$9 (o, i);
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$1 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$11 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$13 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$3 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$5 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$7 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *)
  wire \$9 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:176" *)
  input [7:0] i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:177" *)
  output [7:0] o;
  assign \$9  = o[3] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[2];
  assign \$11  = o[2] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[1];
  assign \$13  = o[1] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[0];
  assign \$1  = o[7] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[6];
  assign \$3  = o[6] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[5];
  assign \$5  = o[5] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[4];
  assign \$7  = o[4] ^ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:183" *) i[3];
  assign o[0] = \$13 ;
  assign o[1] = \$11 ;
  assign o[2] = \$9 ;
  assign o[3] = \$7 ;
  assign o[4] = \$5 ;
  assign o[5] = \$3 ;
  assign o[6] = \$1 ;
  assign o[7] = i[7];
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$1.spi" *)
(* generator = "Amaranth" *)
module spi(spi_device__sck, spi_device__sdi, spi_device__sdo, spi_device__cs, word_out, word_accepted, clk);
  reg \$auto$verilog_backend.cc:2083:dump_module$106  = 0;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:232" *)
  wire \$1 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *)
  wire \$11 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *)
  wire \$13 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:287" *)
  wire [5:0] \$15 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:287" *)
  wire [5:0] \$16 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *)
  wire \$18 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *)
  wire \$20 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *)
  wire \$22 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *)
  wire \$24 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *)
  wire \$26 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *)
  wire \$28 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *)
  wire \$3 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:297" *)
  wire [5:0] \$30 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:297" *)
  wire \$32 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1369" *)
  wire \$34 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1369" *)
  wire \$36 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *)
  wire \$5 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:297" *)
  wire [5:0] \$7 ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:297" *)
  wire \$9 ;
  (* \amaranth.sample_reg  = 32'd1 *)
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:239" *)
  reg \$sample$s$serial_clock$sync$1  = 1'h0;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:239" *)
  wire \$sample$s$serial_clock$sync$1$next ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:257" *)
  reg [4:0] bit_count = 5'h00;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:257" *)
  reg [4:0] \bit_count$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:349" *)
  input clk;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:259" *)
  reg [31:0] current_rx = 32'd0;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:259" *)
  reg [31:0] \current_rx$next ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:258" *)
  reg [31:0] current_tx = 32'd0;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:258" *)
  reg [31:0] \current_tx$next ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:262" *)
  reg is_first_bit = 1'h0;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:262" *)
  reg \is_first_bit$next ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:239" *)
  wire serial_clock;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  input spi_device__cs;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  input spi_device__sck;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  input spi_device__sdi;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  output spi_device__sdo;
  reg spi_device__sdo = 1'h0;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:23" *)
  reg \spi_device__sdo$next ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:210" *)
  output word_accepted;
  reg word_accepted = 1'h0;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:210" *)
  reg \word_accepted$next ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:211" *)
  reg word_complete = 1'h0;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:211" *)
  reg \word_complete$next ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:208" *)
  reg [31:0] word_in = 32'd0;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:208" *)
  reg [31:0] \word_in$next ;
  (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:209" *)
  input [31:0] word_out;
  assign \$9  = \$7  == (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:297" *) 6'h20;
  assign \$13  = \$sample$s$serial_clock$sync$1  & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *) \$11 ;
  assign \$16  = bit_count + (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:287" *) 1'h1;
  assign \$1  = ~ (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:232" *) spi_device__sck;
  assign \$20  = \$sample$s$serial_clock$sync$1  & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *) \$18 ;
  assign \$24  = \$sample$s$serial_clock$sync$1  & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *) \$22 ;
  assign \$28  = \$sample$s$serial_clock$sync$1  & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *) \$26 ;
  assign \$30  = bit_count + (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:297" *) 1'h1;
  assign \$32  = \$30  == (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:297" *) 6'h20;
  assign \$34  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1369" *) \$sample$s$serial_clock$sync$1 ;
  assign \$36  = \$34  & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1369" *) serial_clock;
  assign \$5  = \$sample$s$serial_clock$sync$1  & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/ast.py:1373" *) \$3 ;
  assign \$7  = bit_count + (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:297" *) 1'h1;
  always @(posedge clk)
    \$sample$s$serial_clock$sync$1  <= \$1 ;
  always @(posedge clk)
    current_tx <= \current_tx$next ;
  always @(posedge clk)
    spi_device__sdo <= \spi_device__sdo$next ;
  always @(posedge clk)
    current_rx <= \current_rx$next ;
  always @(posedge clk)
    is_first_bit <= \is_first_bit$next ;
  always @(posedge clk)
    bit_count <= \bit_count$next ;
  always @(posedge clk)
    word_accepted <= \word_accepted$next ;
  always @(posedge clk)
    word_complete <= \word_complete$next ;
  always @(posedge clk)
    word_in <= \word_in$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$106 ) begin end
    \word_in$next  = word_in;
    (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:266" *)
    casez (word_accepted)
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:266" */
      1'h1:
          \word_in$next  = current_rx;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$106 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:266" *)
    casez (word_accepted)
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:266" */
      1'h1:
          \word_complete$next  = 1'h1;
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:271" */
      default:
          \word_complete$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$106 ) begin end
    \word_accepted$next  = 1'h0;
    (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:282" *)
    casez (spi_device__cs)
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:282" */
      1'h1:
          (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:285" *)
          casez (\$5 )
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:285" */
            1'h1:
                (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:297" *)
                casez (\$9 )
                  /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:297" */
                  1'h1:
                      \word_accepted$next  = 1'h1;
                endcase
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$106 ) begin end
    \bit_count$next  = bit_count;
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:282" *)
    casez (spi_device__cs)
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:282" */
      1'h1:
          (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:285" *)
          casez (\$13 )
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:285" */
            1'h1:
                \bit_count$next  = \$16 [4:0];
          endcase
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:311" */
      default:
          \bit_count$next  = 5'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$106 ) begin end
    \is_first_bit$next  = is_first_bit;
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:282" *)
    casez (spi_device__cs)
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:282" */
      1'h1:
          (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:285" *)
          casez (\$20 )
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:285" */
            1'h1:
                \is_first_bit$next  = 1'h0;
          endcase
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:311" */
      default:
          \is_first_bit$next  = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$106 ) begin end
    \current_rx$next  = current_rx;
    (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:282" *)
    casez (spi_device__cs)
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:282" */
      1'h1:
          (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:285" *)
          casez (\$24 )
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:285" */
            1'h1:
                \current_rx$next  = { current_rx[30:0], spi_device__sdi };
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$106 ) begin end
    \current_tx$next  = current_tx;
    \spi_device__sdo$next  = spi_device__sdo;
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:282" *)
    casez (spi_device__cs)
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:282" */
      1'h1:
        begin
          (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:285" *)
          casez (\$28 )
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:285" */
            1'h1:
                (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:297" *)
                casez (\$32 )
                  /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:297" */
                  1'h1:
                      \current_tx$next  = word_out;
                endcase
          endcase
          (* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:305" *)
          casez (\$36 )
            /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:305" */
            1'h1:
                { \spi_device__sdo$next , \current_tx$next [31:1] } = current_tx;
          endcase
        end
      /* src = "/home/ubuntu/from_host/x/Documents/git_repos/forks/gateware/examples/amlib/amlib/io/spi.py:311" */
      default:
          \current_tx$next  = word_out;
    endcase
  end
  assign \$15  = \$16 ;
  assign \$sample$s$serial_clock$sync$1$next  = serial_clock;
  assign serial_clock = \$1 ;
  assign \$3  = spi_device__sck;
  assign \$11  = spi_device__sck;
  assign \$18  = spi_device__sck;
  assign \$22  = spi_device__sck;
  assign \$26  = spi_device__sck;
endmodule

(* \amaranth.hierarchy  = "top" *)
(* top =  1  *)
(* generator = "Amaranth" *)
module top(led_0__io, led_1__io, led_2__io, led_3__io, led_4__io, led_5__io, led_6__io, led_7__io, esp32_spi_0__en__io, esp32_spi_0__tx__io, esp32_spi_0__rx__io, esp32_spi_0__gpio4_copi__io, esp32_spi_0__gpio5_cs__io, esp32_spi_0__gpio12_cipo__io, esp32_spi_0__gpio16_sclk__io, uart_0__rx__io, uart_0__tx__io, uart_0__rts__io, uart_0__dtr__io, button_pwr_0__io, button_fire_0__io
, button_fire_1__io, button_up_0__io, button_down_0__io, button_left_0__io, button_right_0__io, clk25_0__io, esp32_spi_0__gpio0__io);
  reg \$auto$verilog_backend.cc:2083:dump_module$107  = 0;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:676" *)
  wire \$1 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:679" *)
  wire \$11 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *)
  wire \$13 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *)
  wire \$15 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:682" *)
  wire \$17 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *)
  wire \$19 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *)
  wire \$21 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:685" *)
  wire \$23 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *)
  wire \$25 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:677" *)
  wire \$27 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *)
  wire \$29 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:676" *)
  wire \$3 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:680" *)
  wire \$31 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *)
  wire \$33 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:683" *)
  wire \$35 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *)
  wire \$37 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:686" *)
  wire \$39 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:676" *)
  wire \$41 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:676" *)
  wire \$43 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:676" *)
  wire \$45 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *)
  wire \$47 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *)
  wire \$49 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:676" *)
  wire \$5 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:679" *)
  wire \$51 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *)
  wire \$53 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *)
  wire \$55 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:682" *)
  wire \$57 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *)
  wire \$59 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *)
  wire \$61 ;
  (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:685" *)
  wire \$63 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *)
  wire \$7 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *)
  wire \$9 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input button_down_0__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input button_fire_0__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input button_fire_1__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input button_left_0__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input button_pwr_0__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input button_right_0__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input button_up_0__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire cd_sync_clk25_0__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input clk25_0__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire dut_button_fire_0__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire dut_button_fire_1__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:349" *)
  wire dut_clk;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire dut_esp32_spi_0__gpio12_cipo__o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire dut_esp32_spi_0__gpio16_sclk__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire dut_esp32_spi_0__gpio4_copi__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire dut_esp32_spi_0__gpio5_cs__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire dut_led_0__o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire dut_led_1__o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire dut_led_2__o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire dut_led_3__o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire dut_led_4__o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire dut_led_5__o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire dut_led_6__o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire dut_led_7__o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output esp32_spi_0__en__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  inout esp32_spi_0__gpio0__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output esp32_spi_0__gpio12_cipo__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input esp32_spi_0__gpio16_sclk__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input esp32_spi_0__gpio4_copi__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input esp32_spi_0__gpio5_cs__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input esp32_spi_0__rx__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output esp32_spi_0__tx__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output led_0__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output led_1__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output led_2__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output led_3__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output led_4__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output led_5__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output led_6__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output led_7__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire pin_button_pwr_0_button_pwr_0__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  reg pin_esp32_spi_0__en_esp32_spi_0__en__o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  reg pin_esp32_spi_0__gpio0_esp32_spi_0__gpio0__o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire pin_esp32_spi_0__rx_esp32_spi_0__rx__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire pin_esp32_spi_0__tx_esp32_spi_0__tx__o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire pin_uart_0__dtr_uart_0__dtr__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire pin_uart_0__rts_uart_0__rts__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire pin_uart_0__rx_uart_0__rx__i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:143" *)
  wire pin_uart_0__tx_uart_0__tx__o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input uart_0__dtr__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input uart_0__rts__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  input uart_0__rx__io;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/build/res.py:129" *)
  output uart_0__tx__io;
  assign \$9  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *) pin_uart_0__rts_uart_0__rts__i;
  assign \$11  = \$7  & (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:679" *) \$9 ;
  assign \$15  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *) pin_uart_0__rts_uart_0__rts__i;
  assign \$17  = \$13  & (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:682" *) \$15 ;
  assign \$19  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *) pin_uart_0__dtr_uart_0__dtr__i;
  assign \$23  = \$19  & (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:685" *) \$21 ;
  assign \$25  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *) pin_button_pwr_0_button_pwr_0__i;
  assign \$29  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *) pin_button_pwr_0_button_pwr_0__i;
  assign \$33  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *) pin_button_pwr_0_button_pwr_0__i;
  assign \$37  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *) pin_button_pwr_0_button_pwr_0__i;
  assign \$45  = \$41  & (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:676" *) \$43 ;
  assign \$47  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *) pin_uart_0__dtr_uart_0__dtr__i;
  assign \$49  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *) pin_uart_0__rts_uart_0__rts__i;
  assign \$51  = \$47  & (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:679" *) \$49 ;
  assign \$55  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *) pin_uart_0__rts_uart_0__rts__i;
  assign \$57  = \$53  & (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:682" *) \$55 ;
  assign \$5  = \$1  & (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:676" *) \$3 ;
  assign \$59  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *) pin_uart_0__dtr_uart_0__dtr__i;
  assign \$63  = \$59  & (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:685" *) \$61 ;
  assign \$7  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/hdl/rec.py:258" *) pin_uart_0__dtr_uart_0__dtr__i;
  cd_sync cd_sync (
    .clk(dut_clk),
    .clk25_0__i(cd_sync_clk25_0__i)
  );
  dut dut (
    .button_fire_0__i(dut_button_fire_0__i),
    .button_fire_1__i(dut_button_fire_1__i),
    .clk(dut_clk),
    .esp32_spi_0__gpio12_cipo__o(dut_esp32_spi_0__gpio12_cipo__o),
    .esp32_spi_0__gpio16_sclk__i(dut_esp32_spi_0__gpio16_sclk__i),
    .esp32_spi_0__gpio4_copi__i(dut_esp32_spi_0__gpio4_copi__i),
    .esp32_spi_0__gpio5_cs__i(dut_esp32_spi_0__gpio5_cs__i),
    .led_0__o(dut_led_0__o),
    .led_1__o(dut_led_1__o),
    .led_2__o(dut_led_2__o),
    .led_3__o(dut_led_3__o),
    .led_4__o(dut_led_4__o),
    .led_5__o(dut_led_5__o),
    .led_6__o(dut_led_6__o),
    .led_7__o(dut_led_7__o)
  );
  pin_button_down_0 pin_button_down_0 (
    .button_down_0__io(button_down_0__io)
  );
  pin_button_fire_0 pin_button_fire_0 (
    .button_fire_0__i(dut_button_fire_0__i),
    .button_fire_0__io(button_fire_0__io)
  );
  pin_button_fire_1 pin_button_fire_1 (
    .button_fire_1__i(dut_button_fire_1__i),
    .button_fire_1__io(button_fire_1__io)
  );
  pin_button_left_0 pin_button_left_0 (
    .button_left_0__io(button_left_0__io)
  );
  pin_button_pwr_0 pin_button_pwr_0 (
    .button_pwr_0__i(pin_button_pwr_0_button_pwr_0__i),
    .button_pwr_0__io(button_pwr_0__io)
  );
  pin_button_right_0 pin_button_right_0 (
    .button_right_0__io(button_right_0__io)
  );
  pin_button_up_0 pin_button_up_0 (
    .button_up_0__io(button_up_0__io)
  );
  pin_clk25_0 pin_clk25_0 (
    .clk25_0__i(cd_sync_clk25_0__i),
    .clk25_0__io(clk25_0__io)
  );
  pin_esp32_spi_0__en pin_esp32_spi_0__en (
    .esp32_spi_0__en__io(esp32_spi_0__en__io),
    .esp32_spi_0__en__o(pin_esp32_spi_0__en_esp32_spi_0__en__o)
  );
  pin_esp32_spi_0__gpio0 pin_esp32_spi_0__gpio0 (
    .esp32_spi_0__gpio0__io(esp32_spi_0__gpio0__io),
    .esp32_spi_0__gpio0__o(pin_esp32_spi_0__gpio0_esp32_spi_0__gpio0__o)
  );
  pin_esp32_spi_0__gpio12_cipo pin_esp32_spi_0__gpio12_cipo (
    .esp32_spi_0__gpio12_cipo__io(esp32_spi_0__gpio12_cipo__io),
    .esp32_spi_0__gpio12_cipo__o(dut_esp32_spi_0__gpio12_cipo__o)
  );
  pin_esp32_spi_0__gpio16_sclk pin_esp32_spi_0__gpio16_sclk (
    .esp32_spi_0__gpio16_sclk__i(dut_esp32_spi_0__gpio16_sclk__i),
    .esp32_spi_0__gpio16_sclk__io(esp32_spi_0__gpio16_sclk__io)
  );
  pin_esp32_spi_0__gpio4_copi pin_esp32_spi_0__gpio4_copi (
    .esp32_spi_0__gpio4_copi__i(dut_esp32_spi_0__gpio4_copi__i),
    .esp32_spi_0__gpio4_copi__io(esp32_spi_0__gpio4_copi__io)
  );
  pin_esp32_spi_0__gpio5_cs pin_esp32_spi_0__gpio5_cs (
    .esp32_spi_0__gpio5_cs__i(dut_esp32_spi_0__gpio5_cs__i),
    .esp32_spi_0__gpio5_cs__io(esp32_spi_0__gpio5_cs__io)
  );
  pin_esp32_spi_0__rx pin_esp32_spi_0__rx (
    .esp32_spi_0__rx__i(pin_esp32_spi_0__rx_esp32_spi_0__rx__i),
    .esp32_spi_0__rx__io(esp32_spi_0__rx__io)
  );
  pin_esp32_spi_0__tx pin_esp32_spi_0__tx (
    .esp32_spi_0__tx__io(esp32_spi_0__tx__io),
    .esp32_spi_0__tx__o(pin_esp32_spi_0__tx_esp32_spi_0__tx__o)
  );
  pin_led_0 pin_led_0 (
    .led_0__io(led_0__io),
    .led_0__o(dut_led_0__o)
  );
  pin_led_1 pin_led_1 (
    .led_1__io(led_1__io),
    .led_1__o(dut_led_1__o)
  );
  pin_led_2 pin_led_2 (
    .led_2__io(led_2__io),
    .led_2__o(dut_led_2__o)
  );
  pin_led_3 pin_led_3 (
    .led_3__io(led_3__io),
    .led_3__o(dut_led_3__o)
  );
  pin_led_4 pin_led_4 (
    .led_4__io(led_4__io),
    .led_4__o(dut_led_4__o)
  );
  pin_led_5 pin_led_5 (
    .led_5__io(led_5__io),
    .led_5__o(dut_led_5__o)
  );
  pin_led_6 pin_led_6 (
    .led_6__io(led_6__io),
    .led_6__o(dut_led_6__o)
  );
  pin_led_7 pin_led_7 (
    .led_7__io(led_7__io),
    .led_7__o(dut_led_7__o)
  );
  pin_uart_0__dtr pin_uart_0__dtr (
    .uart_0__dtr__i(pin_uart_0__dtr_uart_0__dtr__i),
    .uart_0__dtr__io(uart_0__dtr__io)
  );
  pin_uart_0__rts pin_uart_0__rts (
    .uart_0__rts__i(pin_uart_0__rts_uart_0__rts__i),
    .uart_0__rts__io(uart_0__rts__io)
  );
  pin_uart_0__rx pin_uart_0__rx (
    .uart_0__rx__i(pin_uart_0__rx_uart_0__rx__i),
    .uart_0__rx__io(uart_0__rx__io)
  );
  pin_uart_0__tx pin_uart_0__tx (
    .uart_0__tx__io(uart_0__tx__io),
    .uart_0__tx__o(pin_uart_0__tx_uart_0__tx__o)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$107 ) begin end
    pin_esp32_spi_0__en_esp32_spi_0__en__o = 1'h0;
    (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:676" *)
    casez ({ \$23 , \$17 , \$11 , \$5  })
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:676" */
      4'b???1:
          pin_esp32_spi_0__en_esp32_spi_0__en__o = \$27 ;
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:679" */
      4'b??1?:
          pin_esp32_spi_0__en_esp32_spi_0__en__o = \$31 ;
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:682" */
      4'b?1??:
          pin_esp32_spi_0__en_esp32_spi_0__en__o = \$35 ;
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:685" */
      4'b1???:
          pin_esp32_spi_0__en_esp32_spi_0__en__o = \$39 ;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$107 ) begin end
    pin_esp32_spi_0__gpio0_esp32_spi_0__gpio0__o = 1'h0;
    (* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:676" *)
    casez ({ \$63 , \$57 , \$51 , \$45  })
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:676" */
      4'b???1:
          pin_esp32_spi_0__gpio0_esp32_spi_0__gpio0__o = 1'h1;
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:679" */
      4'b??1?:
          pin_esp32_spi_0__gpio0_esp32_spi_0__gpio0__o = 1'h1;
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:682" */
      4'b?1??:
          pin_esp32_spi_0__gpio0_esp32_spi_0__gpio0__o = 1'h1;
      /* src = "tests1_jan2022/test_sdram_n_fifo_interface_IS42S16160G/test5_modified_ila_with_fifo_backend.py:685" */
      4'b1???:
          pin_esp32_spi_0__gpio0_esp32_spi_0__gpio0__o = 1'h0;
    endcase
  end
  assign pin_uart_0__tx_uart_0__tx__o = pin_esp32_spi_0__rx_esp32_spi_0__rx__i;
  assign pin_esp32_spi_0__tx_esp32_spi_0__tx__o = pin_uart_0__rx_uart_0__rx__i;
  assign \$1  = pin_uart_0__dtr_uart_0__dtr__i;
  assign \$3  = pin_uart_0__rts_uart_0__rts__i;
  assign \$13  = pin_uart_0__dtr_uart_0__dtr__i;
  assign \$21  = pin_uart_0__rts_uart_0__rts__i;
  assign \$27  = \$25 ;
  assign \$31  = \$29 ;
  assign \$35  = 1'h0;
  assign \$39  = \$37 ;
  assign \$41  = pin_uart_0__dtr_uart_0__dtr__i;
  assign \$43  = pin_uart_0__rts_uart_0__rts__i;
  assign \$53  = pin_uart_0__dtr_uart_0__dtr__i;
  assign \$61  = pin_uart_0__rts_uart_0__rts__i;
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$0.unbuffered" *)
(* generator = "Amaranth" *)
module unbuffered(w_data, w_rdy, w_en, r_level, w_level, r_data, r_rdy, r_rst, r_en, clk);
  reg \$auto$verilog_backend.cc:2083:dump_module$108  = 0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:341" *)
  wire [6:0] \$10 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:377" *)
  wire \$12 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:378" *)
  wire \$14 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:377" *)
  wire \$16 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:379" *)
  wire \$18 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:335" *)
  wire [6:0] \$2 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:377" *)
  wire \$20 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:380" *)
  wire \$22 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:383" *)
  wire [6:0] \$24 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:383" *)
  wire [6:0] \$25 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:384" *)
  wire [6:0] \$27 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:384" *)
  wire [6:0] \$28 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:329" *)
  wire \$3 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:329" *)
  wire \$30 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:394" *)
  wire \$32 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:400" *)
  wire \$34 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:335" *)
  wire [6:0] \$5 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:341" *)
  wire [6:0] \$7 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:330" *)
  wire \$8 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:349" *)
  input clk;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:353" *)
  reg [5:0] consume_cdc_consume_r_gry = 6'h00;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:353" *)
  reg [5:0] \consume_cdc_consume_r_gry$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:354" *)
  wire [5:0] consume_cdc_consume_w_gry;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:176" *)
  wire [5:0] consume_dec_i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:177" *)
  wire [5:0] consume_dec_o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:149" *)
  wire [5:0] consume_enc_i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:150" *)
  wire [5:0] consume_enc_o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:339" *)
  reg [5:0] consume_r_bin = 6'h00;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:339" *)
  reg [5:0] \consume_r_bin$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:340" *)
  wire [5:0] consume_r_nxt;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:362" *)
  reg [5:0] consume_w_bin = 6'h00;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:362" *)
  wire [5:0] \consume_w_bin$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:345" *)
  wire [5:0] produce_cdc_produce_r_gry;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:344" *)
  reg [5:0] produce_cdc_produce_w_gry = 6'h00;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:344" *)
  wire [5:0] \produce_cdc_produce_w_gry$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:176" *)
  wire [5:0] produce_dec_i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:177" *)
  wire [5:0] produce_dec_o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:149" *)
  wire [5:0] produce_enc_i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:150" *)
  wire [5:0] produce_enc_o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:368" *)
  wire [5:0] produce_r_bin;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:333" *)
  reg [5:0] produce_w_bin = 6'h00;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:333" *)
  wire [5:0] \produce_w_bin$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:334" *)
  wire [5:0] produce_w_nxt;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:83" *)
  output [15:0] r_data;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:375" *)
  reg r_empty;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:85" *)
  input r_en;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:86" *)
  output [5:0] r_level;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:84" *)
  output r_rdy;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:311" *)
  output r_rst;
  reg r_rst = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:311" *)
  reg \r_rst$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:415" *)
  wire rst_cdc_r_rst;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:176" *)
  wire [5:0] rst_dec_i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:177" *)
  wire [5:0] rst_dec_o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:388" *)
  wire [4:0] storage_r_addr;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:388" *)
  wire [15:0] storage_r_data;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:388" *)
  wire storage_r_en;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:387" *)
  wire [4:0] storage_w_addr;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:387" *)
  wire [15:0] storage_w_data;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:387" *)
  wire storage_w_en;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:78" *)
  input [15:0] w_data;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:80" *)
  input w_en;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:374" *)
  wire w_full;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:81" *)
  output [5:0] w_level;
  reg [5:0] w_level = 6'h00;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:81" *)
  wire [5:0] \w_level$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:79" *)
  output w_rdy;
  reg [15:0] storage [31:0];
  initial begin
    storage[0] = 16'h0000;
    storage[1] = 16'h0000;
    storage[2] = 16'h0000;
    storage[3] = 16'h0000;
    storage[4] = 16'h0000;
    storage[5] = 16'h0000;
    storage[6] = 16'h0000;
    storage[7] = 16'h0000;
    storage[8] = 16'h0000;
    storage[9] = 16'h0000;
    storage[10] = 16'h0000;
    storage[11] = 16'h0000;
    storage[12] = 16'h0000;
    storage[13] = 16'h0000;
    storage[14] = 16'h0000;
    storage[15] = 16'h0000;
    storage[16] = 16'h0000;
    storage[17] = 16'h0000;
    storage[18] = 16'h0000;
    storage[19] = 16'h0000;
    storage[20] = 16'h0000;
    storage[21] = 16'h0000;
    storage[22] = 16'h0000;
    storage[23] = 16'h0000;
    storage[24] = 16'h0000;
    storage[25] = 16'h0000;
    storage[26] = 16'h0000;
    storage[27] = 16'h0000;
    storage[28] = 16'h0000;
    storage[29] = 16'h0000;
    storage[30] = 16'h0000;
    storage[31] = 16'h0000;
  end
  always @(posedge clk) begin
    if (storage_w_en)
      storage[storage_w_addr] <= storage_w_data;
  end
  reg [15:0] _0_;
  always @(posedge clk) begin
    _0_ <= storage[storage_r_addr];
  end
  assign storage_r_data = _0_;
  assign \$10  = consume_r_bin + (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:341" *) \$8 ;
  assign \$12  = produce_cdc_produce_w_gry[5] != (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:377" *) consume_cdc_consume_w_gry[5];
  assign \$14  = produce_cdc_produce_w_gry[4] != (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:378" *) consume_cdc_consume_w_gry[4];
  assign \$16  = \$12  & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:377" *) \$14 ;
  assign \$18  = produce_cdc_produce_w_gry[3:0] == (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:379" *) consume_cdc_consume_w_gry[3:0];
  assign \$20  = \$16  & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:377" *) \$18 ;
  assign \$22  = consume_cdc_consume_r_gry == (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:380" *) produce_cdc_produce_r_gry;
  assign \$25  = produce_w_bin - (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:383" *) consume_w_bin;
  assign \$28  = produce_r_bin - (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:384" *) consume_r_bin;
  assign \$30  = w_rdy & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:329" *) w_en;
  assign \$32  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:394" *) w_full;
  assign \$34  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:400" *) r_empty;
  assign \$3  = w_rdy & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:329" *) w_en;
  assign \$5  = produce_w_bin + (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:335" *) \$3 ;
  assign \$8  = r_rdy & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:330" *) r_en;
  always @(posedge clk)
    r_rst <= \r_rst$next ;
  always @(posedge clk)
    w_level <= \$25 [5:0];
  always @(posedge clk)
    consume_w_bin <= consume_dec_o;
  always @(posedge clk)
    consume_cdc_consume_r_gry <= \consume_cdc_consume_r_gry$next ;
  always @(posedge clk)
    produce_cdc_produce_w_gry <= produce_enc_o;
  always @(posedge clk)
    consume_r_bin <= \consume_r_bin$next ;
  always @(posedge clk)
    produce_w_bin <= \$5 [5:0];
  consume_cdc consume_cdc (
    .clk(clk),
    .consume_r_gry(consume_cdc_consume_r_gry),
    .consume_w_gry(consume_cdc_consume_w_gry)
  );
  consume_dec consume_dec (
    .i(consume_dec_i),
    .o(consume_dec_o)
  );
  consume_enc consume_enc (
    .i(consume_enc_i),
    .o(consume_enc_o)
  );
  produce_cdc produce_cdc (
    .clk(clk),
    .produce_r_gry(produce_cdc_produce_r_gry),
    .produce_w_gry(produce_cdc_produce_w_gry)
  );
  produce_dec produce_dec (
    .i(produce_dec_i),
    .o(produce_dec_o)
  );
  produce_enc produce_enc (
    .i(produce_enc_i),
    .o(produce_enc_o)
  );
  rst_cdc rst_cdc (
    .clk(clk),
    .r_rst(rst_cdc_r_rst)
  );
  rst_dec rst_dec (
    .i(rst_dec_i),
    .o(rst_dec_o)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$108 ) begin end
    r_empty = \$22 ;
    (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:426" *)
    casez (rst_cdc_r_rst)
      /* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:426" */
      1'h1:
          r_empty = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$108 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:426" *)
    casez (rst_cdc_r_rst)
      /* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:426" */
      1'h1:
          \r_rst$next  = 1'h1;
      /* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:431" */
      default:
          \r_rst$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$108 ) begin end
    \consume_r_bin$next  = consume_r_nxt;
    (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:426" *)
    casez (rst_cdc_r_rst)
      /* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:426" */
      1'h1:
          \consume_r_bin$next  = rst_dec_o;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$108 ) begin end
    \consume_cdc_consume_r_gry$next  = consume_enc_o;
    (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:426" *)
    casez (rst_cdc_r_rst)
      /* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:426" */
      1'h1:
          \consume_cdc_consume_r_gry$next  = produce_cdc_produce_r_gry;
    endcase
  end
  assign \$2  = \$5 ;
  assign \$7  = \$10 ;
  assign \$24  = \$25 ;
  assign \$27  = \$28 ;
  assign rst_dec_i = produce_cdc_produce_r_gry;
  assign r_rdy = \$34 ;
  assign storage_r_en = 1'h1;
  assign r_data = storage_r_data;
  assign storage_r_addr = consume_r_nxt[4:0];
  assign w_rdy = \$32 ;
  assign storage_w_en = \$30 ;
  assign storage_w_data = w_data;
  assign storage_w_addr = produce_w_bin[4:0];
  assign r_level = \$28 [5:0];
  assign \w_level$next  = \$25 [5:0];
  assign w_full = \$20 ;
  assign produce_r_bin = produce_dec_o;
  assign produce_dec_i = produce_cdc_produce_r_gry;
  assign \consume_w_bin$next  = consume_dec_o;
  assign consume_dec_i = consume_cdc_consume_w_gry;
  assign consume_enc_i = consume_r_nxt;
  assign \produce_cdc_produce_w_gry$next  = produce_enc_o;
  assign produce_enc_i = produce_w_nxt;
  assign consume_r_nxt = \$10 [5:0];
  assign \produce_w_bin$next  = produce_w_nxt;
  assign produce_w_nxt = \$5 [5:0];
endmodule

(* \amaranth.hierarchy  = "top.dut.U$$1.ila.fifo.unbuffered" *)
(* generator = "Amaranth" *)
module \unbuffered$1 (w_data, w_rdy, w_en, r_level, w_level, r_data, r_rdy, r_rst, r_en, clk);
  reg \$auto$verilog_backend.cc:2083:dump_module$109  = 0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:341" *)
  wire [8:0] \$10 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:377" *)
  wire \$12 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:378" *)
  wire \$14 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:377" *)
  wire \$16 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:379" *)
  wire \$18 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:335" *)
  wire [8:0] \$2 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:377" *)
  wire \$20 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:380" *)
  wire \$22 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:383" *)
  wire [8:0] \$24 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:383" *)
  wire [8:0] \$25 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:384" *)
  wire [8:0] \$27 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:384" *)
  wire [8:0] \$28 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:329" *)
  wire \$3 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:329" *)
  wire \$30 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:394" *)
  wire \$32 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:400" *)
  wire \$34 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:335" *)
  wire [8:0] \$5 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:341" *)
  wire [8:0] \$7 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:330" *)
  wire \$8 ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/vendor/lattice_ecp5.py:349" *)
  input clk;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:353" *)
  reg [7:0] consume_cdc_consume_r_gry = 8'h00;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:353" *)
  reg [7:0] \consume_cdc_consume_r_gry$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:354" *)
  wire [7:0] consume_cdc_consume_w_gry;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:176" *)
  wire [7:0] consume_dec_i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:177" *)
  wire [7:0] consume_dec_o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:149" *)
  wire [7:0] consume_enc_i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:150" *)
  wire [7:0] consume_enc_o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:339" *)
  reg [7:0] consume_r_bin = 8'h00;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:339" *)
  reg [7:0] \consume_r_bin$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:340" *)
  wire [7:0] consume_r_nxt;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:362" *)
  reg [7:0] consume_w_bin = 8'h00;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:362" *)
  wire [7:0] \consume_w_bin$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:345" *)
  wire [7:0] produce_cdc_produce_r_gry;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:344" *)
  reg [7:0] produce_cdc_produce_w_gry = 8'h00;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:344" *)
  wire [7:0] \produce_cdc_produce_w_gry$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:176" *)
  wire [7:0] produce_dec_i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:177" *)
  wire [7:0] produce_dec_o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:149" *)
  wire [7:0] produce_enc_i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:150" *)
  wire [7:0] produce_enc_o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:368" *)
  wire [7:0] produce_r_bin;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:333" *)
  reg [7:0] produce_w_bin = 8'h00;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:333" *)
  wire [7:0] \produce_w_bin$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:334" *)
  wire [7:0] produce_w_nxt;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:83" *)
  output [23:0] r_data;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:375" *)
  reg r_empty;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:85" *)
  input r_en;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:86" *)
  output [7:0] r_level;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:84" *)
  output r_rdy;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:311" *)
  output r_rst;
  reg r_rst = 1'h0;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:311" *)
  reg \r_rst$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:415" *)
  wire rst_cdc_r_rst;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:176" *)
  wire [7:0] rst_dec_i;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/coding.py:177" *)
  wire [7:0] rst_dec_o;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:388" *)
  wire [6:0] storage_r_addr;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:388" *)
  wire [23:0] storage_r_data;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:388" *)
  wire storage_r_en;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:387" *)
  wire [6:0] storage_w_addr;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:387" *)
  wire [23:0] storage_w_data;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:387" *)
  wire storage_w_en;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:78" *)
  input [23:0] w_data;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:80" *)
  input w_en;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:374" *)
  wire w_full;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:81" *)
  output [7:0] w_level;
  reg [7:0] w_level = 8'h00;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:81" *)
  wire [7:0] \w_level$next ;
  (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:79" *)
  output w_rdy;
  reg [23:0] storage [127:0];
  initial begin
    storage[0] = 24'h000000;
    storage[1] = 24'h000000;
    storage[2] = 24'h000000;
    storage[3] = 24'h000000;
    storage[4] = 24'h000000;
    storage[5] = 24'h000000;
    storage[6] = 24'h000000;
    storage[7] = 24'h000000;
    storage[8] = 24'h000000;
    storage[9] = 24'h000000;
    storage[10] = 24'h000000;
    storage[11] = 24'h000000;
    storage[12] = 24'h000000;
    storage[13] = 24'h000000;
    storage[14] = 24'h000000;
    storage[15] = 24'h000000;
    storage[16] = 24'h000000;
    storage[17] = 24'h000000;
    storage[18] = 24'h000000;
    storage[19] = 24'h000000;
    storage[20] = 24'h000000;
    storage[21] = 24'h000000;
    storage[22] = 24'h000000;
    storage[23] = 24'h000000;
    storage[24] = 24'h000000;
    storage[25] = 24'h000000;
    storage[26] = 24'h000000;
    storage[27] = 24'h000000;
    storage[28] = 24'h000000;
    storage[29] = 24'h000000;
    storage[30] = 24'h000000;
    storage[31] = 24'h000000;
    storage[32] = 24'h000000;
    storage[33] = 24'h000000;
    storage[34] = 24'h000000;
    storage[35] = 24'h000000;
    storage[36] = 24'h000000;
    storage[37] = 24'h000000;
    storage[38] = 24'h000000;
    storage[39] = 24'h000000;
    storage[40] = 24'h000000;
    storage[41] = 24'h000000;
    storage[42] = 24'h000000;
    storage[43] = 24'h000000;
    storage[44] = 24'h000000;
    storage[45] = 24'h000000;
    storage[46] = 24'h000000;
    storage[47] = 24'h000000;
    storage[48] = 24'h000000;
    storage[49] = 24'h000000;
    storage[50] = 24'h000000;
    storage[51] = 24'h000000;
    storage[52] = 24'h000000;
    storage[53] = 24'h000000;
    storage[54] = 24'h000000;
    storage[55] = 24'h000000;
    storage[56] = 24'h000000;
    storage[57] = 24'h000000;
    storage[58] = 24'h000000;
    storage[59] = 24'h000000;
    storage[60] = 24'h000000;
    storage[61] = 24'h000000;
    storage[62] = 24'h000000;
    storage[63] = 24'h000000;
    storage[64] = 24'h000000;
    storage[65] = 24'h000000;
    storage[66] = 24'h000000;
    storage[67] = 24'h000000;
    storage[68] = 24'h000000;
    storage[69] = 24'h000000;
    storage[70] = 24'h000000;
    storage[71] = 24'h000000;
    storage[72] = 24'h000000;
    storage[73] = 24'h000000;
    storage[74] = 24'h000000;
    storage[75] = 24'h000000;
    storage[76] = 24'h000000;
    storage[77] = 24'h000000;
    storage[78] = 24'h000000;
    storage[79] = 24'h000000;
    storage[80] = 24'h000000;
    storage[81] = 24'h000000;
    storage[82] = 24'h000000;
    storage[83] = 24'h000000;
    storage[84] = 24'h000000;
    storage[85] = 24'h000000;
    storage[86] = 24'h000000;
    storage[87] = 24'h000000;
    storage[88] = 24'h000000;
    storage[89] = 24'h000000;
    storage[90] = 24'h000000;
    storage[91] = 24'h000000;
    storage[92] = 24'h000000;
    storage[93] = 24'h000000;
    storage[94] = 24'h000000;
    storage[95] = 24'h000000;
    storage[96] = 24'h000000;
    storage[97] = 24'h000000;
    storage[98] = 24'h000000;
    storage[99] = 24'h000000;
    storage[100] = 24'h000000;
    storage[101] = 24'h000000;
    storage[102] = 24'h000000;
    storage[103] = 24'h000000;
    storage[104] = 24'h000000;
    storage[105] = 24'h000000;
    storage[106] = 24'h000000;
    storage[107] = 24'h000000;
    storage[108] = 24'h000000;
    storage[109] = 24'h000000;
    storage[110] = 24'h000000;
    storage[111] = 24'h000000;
    storage[112] = 24'h000000;
    storage[113] = 24'h000000;
    storage[114] = 24'h000000;
    storage[115] = 24'h000000;
    storage[116] = 24'h000000;
    storage[117] = 24'h000000;
    storage[118] = 24'h000000;
    storage[119] = 24'h000000;
    storage[120] = 24'h000000;
    storage[121] = 24'h000000;
    storage[122] = 24'h000000;
    storage[123] = 24'h000000;
    storage[124] = 24'h000000;
    storage[125] = 24'h000000;
    storage[126] = 24'h000000;
    storage[127] = 24'h000000;
  end
  always @(posedge clk) begin
    if (storage_w_en)
      storage[storage_w_addr] <= storage_w_data;
  end
  reg [23:0] _0_;
  always @(posedge clk) begin
    _0_ <= storage[storage_r_addr];
  end
  assign storage_r_data = _0_;
  assign \$10  = consume_r_bin + (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:341" *) \$8 ;
  assign \$12  = produce_cdc_produce_w_gry[7] != (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:377" *) consume_cdc_consume_w_gry[7];
  assign \$14  = produce_cdc_produce_w_gry[6] != (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:378" *) consume_cdc_consume_w_gry[6];
  assign \$16  = \$12  & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:377" *) \$14 ;
  assign \$18  = produce_cdc_produce_w_gry[5:0] == (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:379" *) consume_cdc_consume_w_gry[5:0];
  assign \$20  = \$16  & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:377" *) \$18 ;
  assign \$22  = consume_cdc_consume_r_gry == (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:380" *) produce_cdc_produce_r_gry;
  assign \$25  = produce_w_bin - (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:383" *) consume_w_bin;
  assign \$28  = produce_r_bin - (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:384" *) consume_r_bin;
  assign \$30  = w_rdy & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:329" *) w_en;
  assign \$32  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:394" *) w_full;
  assign \$34  = ~ (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:400" *) r_empty;
  assign \$3  = w_rdy & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:329" *) w_en;
  assign \$5  = produce_w_bin + (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:335" *) \$3 ;
  assign \$8  = r_rdy & (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:330" *) r_en;
  always @(posedge clk)
    r_rst <= \r_rst$next ;
  always @(posedge clk)
    w_level <= \$25 [7:0];
  always @(posedge clk)
    consume_w_bin <= consume_dec_o;
  always @(posedge clk)
    consume_cdc_consume_r_gry <= \consume_cdc_consume_r_gry$next ;
  always @(posedge clk)
    produce_cdc_produce_w_gry <= produce_enc_o;
  always @(posedge clk)
    consume_r_bin <= \consume_r_bin$next ;
  always @(posedge clk)
    produce_w_bin <= \$5 [7:0];
  \consume_cdc$5  consume_cdc (
    .clk(clk),
    .consume_r_gry(consume_cdc_consume_r_gry),
    .consume_w_gry(consume_cdc_consume_w_gry)
  );
  \consume_dec$6  consume_dec (
    .i(consume_dec_i),
    .o(consume_dec_o)
  );
  \consume_enc$4  consume_enc (
    .i(consume_enc_i),
    .o(consume_enc_o)
  );
  \produce_cdc$3  produce_cdc (
    .clk(clk),
    .produce_r_gry(produce_cdc_produce_r_gry),
    .produce_w_gry(produce_cdc_produce_w_gry)
  );
  \produce_dec$7  produce_dec (
    .i(produce_dec_i),
    .o(produce_dec_o)
  );
  \produce_enc$2  produce_enc (
    .i(produce_enc_i),
    .o(produce_enc_o)
  );
  \rst_cdc$8  rst_cdc (
    .clk(clk),
    .r_rst(rst_cdc_r_rst)
  );
  \rst_dec$9  rst_dec (
    .i(rst_dec_i),
    .o(rst_dec_o)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$109 ) begin end
    r_empty = \$22 ;
    (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:426" *)
    casez (rst_cdc_r_rst)
      /* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:426" */
      1'h1:
          r_empty = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$109 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:426" *)
    casez (rst_cdc_r_rst)
      /* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:426" */
      1'h1:
          \r_rst$next  = 1'h1;
      /* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:431" */
      default:
          \r_rst$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$109 ) begin end
    \consume_r_bin$next  = consume_r_nxt;
    (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:426" *)
    casez (rst_cdc_r_rst)
      /* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:426" */
      1'h1:
          \consume_r_bin$next  = rst_dec_o;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$109 ) begin end
    \consume_cdc_consume_r_gry$next  = consume_enc_o;
    (* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:426" *)
    casez (rst_cdc_r_rst)
      /* src = "/home/ubuntu/Documents/venv_fpga/lib/python3.8/site-packages/amaranth/lib/fifo.py:426" */
      1'h1:
          \consume_cdc_consume_r_gry$next  = produce_cdc_produce_r_gry;
    endcase
  end
  assign \$2  = \$5 ;
  assign \$7  = \$10 ;
  assign \$24  = \$25 ;
  assign \$27  = \$28 ;
  assign rst_dec_i = produce_cdc_produce_r_gry;
  assign r_rdy = \$34 ;
  assign storage_r_en = 1'h1;
  assign r_data = storage_r_data;
  assign storage_r_addr = consume_r_nxt[6:0];
  assign w_rdy = \$32 ;
  assign storage_w_en = \$30 ;
  assign storage_w_data = w_data;
  assign storage_w_addr = produce_w_bin[6:0];
  assign r_level = \$28 [7:0];
  assign \w_level$next  = \$25 [7:0];
  assign w_full = \$20 ;
  assign produce_r_bin = produce_dec_o;
  assign produce_dec_i = produce_cdc_produce_r_gry;
  assign \consume_w_bin$next  = consume_dec_o;
  assign consume_dec_i = consume_cdc_consume_w_gry;
  assign consume_enc_i = consume_r_nxt;
  assign \produce_cdc_produce_w_gry$next  = produce_enc_o;
  assign produce_enc_i = produce_w_nxt;
  assign consume_r_nxt = \$10 [7:0];
  assign \produce_w_bin$next  = produce_w_nxt;
  assign produce_w_nxt = \$5 [7:0];
endmodule
