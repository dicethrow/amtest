; SMT-LIBv2 description generated by Yosys 0.13+3 (git sha1 61324cf55, clang 10.0.0-4ubuntu1 -fPIC -Os)
; yosys-smt2-module delayer
(declare-sort |delayer_s| 0)
(declare-fun |delayer_is| (|delayer_s|) Bool)
(declare-fun |delayer#0| (|delayer_s|) (_ BitVec 12)) ; \ui__load
; yosys-smt2-input ui__load 12
; yosys-smt2-wire ui__load 12
(define-fun |delayer_n ui__load| ((state |delayer_s|)) (_ BitVec 12) (|delayer#0| state))
(declare-fun |delayer#1| (|delayer_s|) (_ BitVec 1)) ; \ui__inactive
; yosys-smt2-output ui__inactive 1
; yosys-smt2-register ui__inactive 1
; yosys-smt2-wire ui__inactive 1
(define-fun |delayer_n ui__inactive| ((state |delayer_s|)) Bool (= ((_ extract 0 0) (|delayer#1| state)) #b1))
(declare-fun |delayer#2| (|delayer_s|) (_ BitVec 1)) ; \ui__done
; yosys-smt2-output ui__done 1
; yosys-smt2-register ui__done 1
; yosys-smt2-wire ui__done 1
(define-fun |delayer_n ui__done| ((state |delayer_s|)) Bool (= ((_ extract 0 0) (|delayer#2| state)) #b1))
(declare-fun |delayer#3| (|delayer_s|) Bool) ; \rst
; yosys-smt2-input rst 1
; yosys-smt2-wire rst 1
(define-fun |delayer_n rst| ((state |delayer_s|)) Bool (|delayer#3| state))
(declare-fun |delayer#4| (|delayer_s|) (_ BitVec 12)) ; \countdown
; yosys-smt2-register countdown 12
; yosys-smt2-wire countdown 12
(define-fun |delayer_n countdown| ((state |delayer_s|)) (_ BitVec 12) (|delayer#4| state))
(declare-fun |delayer#5| (|delayer_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-clock clk posedge
(define-fun |delayer_n clk| ((state |delayer_s|)) Bool (|delayer#5| state))
(declare-fun |delayer#6| (|delayer_s|) (_ BitVec 12)) ; \_ui__load
; yosys-smt2-register _ui__load 12
; yosys-smt2-wire _ui__load 12
(define-fun |delayer_n _ui__load| ((state |delayer_s|)) (_ BitVec 12) (|delayer#6| state))
(declare-fun |delayer#7| (|delayer_s|) (_ BitVec 1)) ; \_ui__inactive
; yosys-smt2-register _ui__inactive 1
; yosys-smt2-wire _ui__inactive 1
(define-fun |delayer_n _ui__inactive| ((state |delayer_s|)) Bool (= ((_ extract 0 0) (|delayer#7| state)) #b1))
(declare-fun |delayer#8| (|delayer_s|) (_ BitVec 1)) ; \_ui__done
; yosys-smt2-register _ui__done 1
; yosys-smt2-wire _ui__done 1
(define-fun |delayer_n _ui__done| ((state |delayer_s|)) Bool (= ((_ extract 0 0) (|delayer#8| state)) #b1))
(define-fun |delayer#9| ((state |delayer_s|)) Bool (= (|delayer#4| state) #b000000000001)) ; $12
(define-fun |delayer#10| ((state |delayer_s|)) (_ BitVec 1) (ite (|delayer#3| state) #b0 (ite (|delayer#9| state) #b1 #b0))) ; $auto$rtlil.cc:2443:Mux$90
(define-fun |delayer#11| ((state |delayer_s|)) Bool (not (or  (= ((_ extract 0 0) (|delayer#4| state)) #b1) (= ((_ extract 1 1) (|delayer#4| state)) #b1) (= ((_ extract 2 2) (|delayer#4| state)) #b1) (= ((_ extract 3 3) (|delayer#4| state)) #b1) (= ((_ extract 4 4) (|delayer#4| state)) #b1) (= ((_ extract 5 5) (|delayer#4| state)) #b1) (= ((_ extract 6 6) (|delayer#4| state)) #b1) (= ((_ extract 7 7) (|delayer#4| state)) #b1) (= ((_ extract 8 8) (|delayer#4| state)) #b1) (= ((_ extract 9 9) (|delayer#4| state)) #b1) (= ((_ extract 10 10) (|delayer#4| state)) #b1) (= ((_ extract 11 11) (|delayer#4| state)) #b1)))) ; $14
(define-fun |delayer#12| ((state |delayer_s|)) (_ BitVec 1) (ite (|delayer#3| state) #b0 (ite (|delayer#11| state) #b1 #b0))) ; $auto$rtlil.cc:2443:Mux$92
(define-fun |delayer#13| ((state |delayer_s|)) (_ BitVec 12) (ite (|delayer#3| state) #b000000000000 (|delayer#0| state))) ; $auto$rtlil.cc:2443:Mux$84
(define-fun |delayer#14| ((state |delayer_s|)) (_ BitVec 12) (bvsub (|delayer#4| state) #b000000000001)) ; $2
(define-fun |delayer#15| ((state |delayer_s|)) Bool (bvugt (|delayer#4| state) #b000000000000)) ; $7
(define-fun |delayer#16| ((state |delayer_s|)) (_ BitVec 12) (ite (|delayer#15| state) (|delayer#14| state) #b000000000000)) ; $1
(define-fun |delayer#17| ((state |delayer_s|)) Bool (distinct (|delayer#6| state) #b000000000000)) ; $10
(define-fun |delayer#18| ((state |delayer_s|)) (_ BitVec 12) (ite (|delayer#17| state) (|delayer#6| state) (|delayer#16| state))) ; $procmux$35_Y
(define-fun |delayer#19| ((state |delayer_s|)) Bool (or  (|delayer#15| state) (|delayer#17| state))) ; $auto$opt_dff.cc:197:make_patterns_logic$51
(define-fun |delayer#20| ((state |delayer_s|)) (_ BitVec 12) (ite (|delayer#19| state) (|delayer#18| state) (|delayer#4| state))) ; $auto$rtlil.cc:2443:Mux$86
(define-fun |delayer#21| ((state |delayer_s|)) (_ BitVec 12) (ite (|delayer#3| state) #b000000000000 (|delayer#20| state))) ; $auto$rtlil.cc:2443:Mux$88
(define-fun |delayer#22| ((state |delayer_s|)) (_ BitVec 1) (ite (|delayer#3| state) #b0 (|delayer#8| state))) ; $auto$rtlil.cc:2443:Mux$80
(define-fun |delayer#23| ((state |delayer_s|)) (_ BitVec 1) (ite (|delayer#3| state) #b0 (|delayer#7| state))) ; $auto$rtlil.cc:2443:Mux$82
(define-fun |delayer_a| ((state |delayer_s|)) Bool true)
(define-fun |delayer_u| ((state |delayer_s|)) Bool true)
(define-fun |delayer_i| ((state |delayer_s|)) Bool (and
  (= (= ((_ extract 0 0) (|delayer#1| state)) #b1) false) ; ui__inactive
  (= (= ((_ extract 0 0) (|delayer#2| state)) #b1) false) ; ui__done
  (= (|delayer#4| state) #b000000000000) ; countdown
  (= (|delayer#6| state) #b000000000000) ; _ui__load
  (= (= ((_ extract 0 0) (|delayer#7| state)) #b1) false) ; _ui__inactive
  (= (= ((_ extract 0 0) (|delayer#8| state)) #b1) false) ; _ui__done
))
(define-fun |delayer_h| ((state |delayer_s|)) Bool true)
(define-fun |delayer_t| ((state |delayer_s|) (next_state |delayer_s|)) Bool (and
  (= (|delayer#10| state) (|delayer#8| next_state)) ; $auto$ff.cc:262:slice$48 \_ui__done
  (= (|delayer#12| state) (|delayer#7| next_state)) ; $auto$ff.cc:262:slice$47 \_ui__inactive
  (= (|delayer#13| state) (|delayer#6| next_state)) ; $auto$ff.cc:262:slice$53 \_ui__load
  (= (|delayer#21| state) (|delayer#4| next_state)) ; $auto$ff.cc:262:slice$50 \countdown
  (= (|delayer#22| state) (|delayer#2| next_state)) ; $auto$ff.cc:262:slice$55 \ui__done
  (= (|delayer#23| state) (|delayer#1| next_state)) ; $auto$ff.cc:262:slice$54 \ui__inactive
)) ; end of module delayer
; yosys-smt2-module top
(declare-sort |top_s| 0)
(declare-fun |top_is| (|top_s|) Bool)
(declare-fun |top#0| (|top_s|) Bool) ; \ui__tb_fanout_flags__trigger
; yosys-smt2-input ui__tb_fanout_flags__trigger 1
; yosys-smt2-wire ui__tb_fanout_flags__trigger 1
(define-fun |top_n ui__tb_fanout_flags__trigger| ((state |top_s|)) Bool (|top#0| state))
(declare-fun |top#1| (|top_s|) (_ BitVec 12)) ; \ui__load
; yosys-smt2-input ui__load 12
; yosys-smt2-wire ui__load 12
(define-fun |top_n ui__load| ((state |top_s|)) (_ BitVec 12) (|top#1| state))
(declare-fun |top#2| (|top_s|) (_ BitVec 1)) ; \timer_ought_to_finish
; yosys-smt2-register timer_ought_to_finish 1
; yosys-smt2-wire timer_ought_to_finish 1
(define-fun |top_n timer_ought_to_finish| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#2| state)) #b1))
(declare-fun |top#3| (|top_s|) (_ BitVec 1)) ; \_ui__done
; yosys-smt2-wire timer_done 1
(define-fun |top_n timer_done| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#3| state)) #b1))
(declare-fun |top#4| (|top_s|) Bool) ; \rst
; yosys-smt2-input rst 1
; yosys-smt2-wire rst 1
(define-fun |top_n rst| ((state |top_s|)) Bool (|top#4| state))
(define-fun |top#5| ((state |top_s|)) Bool (|top_is| state)) ; \init
; yosys-smt2-wire init 1
(define-fun |top_n init| ((state |top_s|)) Bool (|top#5| state))
(declare-fun |top#6| (|top_s|) (_ BitVec 12)) ; \delayer_ui__load
; yosys-smt2-register delayer_ui__load 12
; yosys-smt2-wire delayer_ui__load 12
(define-fun |top_n delayer_ui__load| ((state |top_s|)) (_ BitVec 12) (|top#6| state))
; yosys-smt2-cell delayer delayer
(declare-fun |top#7| (|top_s|) Bool) ; \delayer_ui__inactive
(declare-fun |top#8| (|top_s|) Bool) ; \delayer_ui__done
(declare-fun |top_h delayer| (|top_s|) |delayer_s|)
; yosys-smt2-wire delayer_ui__inactive 1
(define-fun |top_n delayer_ui__inactive| ((state |top_s|)) Bool (|top#7| state))
; yosys-smt2-wire delayer_ui__done 1
(define-fun |top_n delayer_ui__done| ((state |top_s|)) Bool (|top#8| state))
(declare-fun |top#9| (|top_s|) (_ BitVec 2)) ; \delay_fsm_state
; yosys-smt2-register delay_fsm_state 2
; yosys-smt2-wire delay_fsm_state 2
(define-fun |top_n delay_fsm_state| ((state |top_s|)) (_ BitVec 2) (|top#9| state))
(declare-fun |top#10| (|top_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-clock clk posedge
(define-fun |top_n clk| ((state |top_s|)) Bool (|top#10| state))
(declare-fun |top#11| (|top_s|) Bool) ; \_ui__tb_fanin_flags__in_start
; yosys-smt2-input _ui__tb_fanin_flags__in_start 1
; yosys-smt2-wire _ui__tb_fanin_flags__in_start 1
(define-fun |top_n _ui__tb_fanin_flags__in_start| ((state |top_s|)) Bool (|top#11| state))
(declare-fun |top#12| (|top_s|) Bool) ; \_ui__tb_fanin_flags__in_done
; yosys-smt2-input _ui__tb_fanin_flags__in_done 1
; yosys-smt2-wire _ui__tb_fanin_flags__in_done 1
(define-fun |top_n _ui__tb_fanin_flags__in_done| ((state |top_s|)) Bool (|top#12| state))
(declare-fun |top#13| (|top_s|) (_ BitVec 12)) ; \_ui__load
; yosys-smt2-register _ui__load 12
; yosys-smt2-wire _ui__load 12
(define-fun |top_n _ui__load| ((state |top_s|)) (_ BitVec 12) (|top#13| state))
; yosys-smt2-register _ui__done 1
; yosys-smt2-wire _ui__done 1
(define-fun |top_n _ui__done| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#3| state)) #b1))
(declare-fun |top#14| (|top_s|) (_ BitVec 1)) ; $sample$s$init$sync$9
; yosys-smt2-register $sample$s$init$sync$9 1
(define-fun |top_n $sample$s$init$sync$9| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#14| state)) #b1))
(declare-fun |top#15| (|top_s|) (_ BitVec 1)) ; $sample$s$init$sync$8
; yosys-smt2-register $sample$s$init$sync$8 1
(define-fun |top_n $sample$s$init$sync$8| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#15| state)) #b1))
(declare-fun |top#16| (|top_s|) (_ BitVec 1)) ; $sample$s$init$sync$7
; yosys-smt2-register $sample$s$init$sync$7 1
(define-fun |top_n $sample$s$init$sync$7| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#16| state)) #b1))
(declare-fun |top#17| (|top_s|) (_ BitVec 1)) ; $sample$s$init$sync$6
; yosys-smt2-register $sample$s$init$sync$6 1
(define-fun |top_n $sample$s$init$sync$6| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#17| state)) #b1))
(declare-fun |top#18| (|top_s|) (_ BitVec 1)) ; $sample$s$init$sync$5
; yosys-smt2-register $sample$s$init$sync$5 1
(define-fun |top_n $sample$s$init$sync$5| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#18| state)) #b1))
(declare-fun |top#19| (|top_s|) (_ BitVec 1)) ; $sample$s$init$sync$4
; yosys-smt2-register $sample$s$init$sync$4 1
(define-fun |top_n $sample$s$init$sync$4| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#19| state)) #b1))
(declare-fun |top#20| (|top_s|) (_ BitVec 1)) ; $sample$s$init$sync$3
; yosys-smt2-register $sample$s$init$sync$3 1
(define-fun |top_n $sample$s$init$sync$3| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#20| state)) #b1))
(declare-fun |top#21| (|top_s|) (_ BitVec 1)) ; $sample$s$init$sync$23
; yosys-smt2-register $sample$s$init$sync$23 1
(define-fun |top_n $sample$s$init$sync$23| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#21| state)) #b1))
(declare-fun |top#22| (|top_s|) (_ BitVec 1)) ; $sample$s$init$sync$22
; yosys-smt2-register $sample$s$init$sync$22 1
(define-fun |top_n $sample$s$init$sync$22| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#22| state)) #b1))
(declare-fun |top#23| (|top_s|) (_ BitVec 1)) ; $sample$s$init$sync$21
; yosys-smt2-register $sample$s$init$sync$21 1
(define-fun |top_n $sample$s$init$sync$21| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#23| state)) #b1))
(declare-fun |top#24| (|top_s|) (_ BitVec 1)) ; $sample$s$init$sync$20
; yosys-smt2-register $sample$s$init$sync$20 1
(define-fun |top_n $sample$s$init$sync$20| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#24| state)) #b1))
(declare-fun |top#25| (|top_s|) (_ BitVec 1)) ; $sample$s$init$sync$2
; yosys-smt2-register $sample$s$init$sync$2 1
(define-fun |top_n $sample$s$init$sync$2| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#25| state)) #b1))
(declare-fun |top#26| (|top_s|) (_ BitVec 1)) ; $sample$s$init$sync$19
; yosys-smt2-register $sample$s$init$sync$19 1
(define-fun |top_n $sample$s$init$sync$19| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#26| state)) #b1))
(declare-fun |top#27| (|top_s|) (_ BitVec 1)) ; $sample$s$init$sync$18
; yosys-smt2-register $sample$s$init$sync$18 1
(define-fun |top_n $sample$s$init$sync$18| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#27| state)) #b1))
(declare-fun |top#28| (|top_s|) (_ BitVec 1)) ; $sample$s$init$sync$17
; yosys-smt2-register $sample$s$init$sync$17 1
(define-fun |top_n $sample$s$init$sync$17| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#28| state)) #b1))
(declare-fun |top#29| (|top_s|) (_ BitVec 1)) ; $sample$s$init$sync$16
; yosys-smt2-register $sample$s$init$sync$16 1
(define-fun |top_n $sample$s$init$sync$16| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#29| state)) #b1))
(declare-fun |top#30| (|top_s|) (_ BitVec 1)) ; $sample$s$init$sync$15
; yosys-smt2-register $sample$s$init$sync$15 1
(define-fun |top_n $sample$s$init$sync$15| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#30| state)) #b1))
(declare-fun |top#31| (|top_s|) (_ BitVec 1)) ; $sample$s$init$sync$14
; yosys-smt2-register $sample$s$init$sync$14 1
(define-fun |top_n $sample$s$init$sync$14| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#31| state)) #b1))
(declare-fun |top#32| (|top_s|) (_ BitVec 1)) ; $sample$s$init$sync$13
; yosys-smt2-register $sample$s$init$sync$13 1
(define-fun |top_n $sample$s$init$sync$13| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#32| state)) #b1))
(declare-fun |top#33| (|top_s|) (_ BitVec 1)) ; $sample$s$init$sync$12
; yosys-smt2-register $sample$s$init$sync$12 1
(define-fun |top_n $sample$s$init$sync$12| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#33| state)) #b1))
(declare-fun |top#34| (|top_s|) (_ BitVec 1)) ; $sample$s$init$sync$11
; yosys-smt2-register $sample$s$init$sync$11 1
(define-fun |top_n $sample$s$init$sync$11| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#34| state)) #b1))
(declare-fun |top#35| (|top_s|) (_ BitVec 1)) ; $sample$s$init$sync$10
; yosys-smt2-register $sample$s$init$sync$10 1
(define-fun |top_n $sample$s$init$sync$10| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#35| state)) #b1))
(declare-fun |top#36| (|top_s|) (_ BitVec 1)) ; $sample$s$init$sync$1
; yosys-smt2-register $sample$s$init$sync$1 1
(define-fun |top_n $sample$s$init$sync$1| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#36| state)) #b1))
(declare-fun |top#37| (|top_s|) (_ BitVec 1)) ; $assert$en
; yosys-smt2-register $assert$en 1
(define-fun |top_n $assert$en| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#37| state)) #b1))
(declare-fun |top#38| (|top_s|) (_ BitVec 1)) ; $assert$check
; yosys-smt2-register $assert$check 1
(define-fun |top_n $assert$check| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#38| state)) #b1))
; yosys-smt2-assert 0 test7_formal_verification_timer_restructured.py:244
(define-fun |top_a 0| ((state |top_s|)) Bool (or (= ((_ extract 0 0) (|top#38| state)) #b1) (not (= ((_ extract 0 0) (|top#37| state)) #b1)))) ; $5
(define-fun |top#39| ((state |top_s|)) Bool (= (|top#3| state) (|top#2| state))) ; $3
(define-fun |top#40| ((state |top_s|)) (_ BitVec 1) (ite (|top#4| state) (|top#38| state) (ite (|top#39| state) #b1 #b0))) ; $auto$rtlil.cc:2443:Mux$78
(define-fun |top#41| ((state |top_s|)) (_ BitVec 1) (ite (|top#4| state) (|top#37| state) #b1)) ; $auto$rtlil.cc:2443:Mux$76
(define-fun |top#42| ((state |top_s|)) Bool (= (|top#9| state) #b01)) ; $procmux$17_CMP
(define-fun |top#43| ((state |top_s|)) Bool (not (or  (= ((_ extract 0 0) (|top#9| state)) #b1) (= ((_ extract 1 1) (|top#9| state)) #b1)))) ; $procmux$18_CMP
(define-fun |top#44| ((state |top_s|)) (_ BitVec 12) (ite (|top#43| state) #b000000010000 (ite (|top#42| state) #b000000000000 (|top#1| state)))) ; $procmux$16_Y
(define-fun |top#45| ((state |top_s|)) (_ BitVec 12) (ite (|top#4| state) #b000000000000 (|top#44| state))) ; $auto$rtlil.cc:2443:Mux$66
(define-fun |top#46| ((state |top_s|)) (_ BitVec 2) (ite (|top#43| state) #b01 (ite (|top#42| state) #b10 #b00))) ; $procmux$5_Y
(define-fun |top#47| ((state |top_s|)) Bool (or  (|top#42| state) (|top#43| state))) ; $auto$opt_dff.cc:197:make_patterns_logic$60
(define-fun |top#48| ((state |top_s|)) (_ BitVec 2) (ite (|top#47| state) (|top#46| state) (|top#9| state))) ; $auto$rtlil.cc:2443:Mux$72
(define-fun |top#49| ((state |top_s|)) (_ BitVec 2) (ite (|top#4| state) #b00 (|top#48| state))) ; $auto$rtlil.cc:2443:Mux$74
(define-fun |top#50| ((state |top_s|)) (_ BitVec 12) (ite (|top#4| state) #b000000000000 (|top#13| state))) ; $auto$rtlil.cc:2443:Mux$70
(define-fun |top#51| ((state |top_s|)) (_ BitVec 1) (ite (|top#4| state) #b0 (ite (|top#8| state) #b1 #b0))) ; $auto$rtlil.cc:2443:Mux$68
(define-fun |top_a| ((state |top_s|)) Bool (and
  (|top_a 0| state)
  (|delayer_a| (|top_h delayer| state))
))
(define-fun |top_u| ((state |top_s|)) Bool 
  (|delayer_u| (|top_h delayer| state))
)
(define-fun |top_i| ((state |top_s|)) Bool (and
  (= (= ((_ extract 0 0) (|top#2| state)) #b1) false) ; timer_ought_to_finish
  (= (|top#6| state) #b000000000000) ; delayer_ui__load
  (= (|top#9| state) #b00) ; delay_fsm_state
  (= (|top#13| state) #b000000000000) ; _ui__load
  (= (= ((_ extract 0 0) (|top#3| state)) #b1) false) ; _ui__done
  (= (= ((_ extract 0 0) (|top#14| state)) #b1) false) ; $sample$s$init$sync$9
  (= (= ((_ extract 0 0) (|top#15| state)) #b1) false) ; $sample$s$init$sync$8
  (= (= ((_ extract 0 0) (|top#16| state)) #b1) false) ; $sample$s$init$sync$7
  (= (= ((_ extract 0 0) (|top#17| state)) #b1) false) ; $sample$s$init$sync$6
  (= (= ((_ extract 0 0) (|top#18| state)) #b1) false) ; $sample$s$init$sync$5
  (= (= ((_ extract 0 0) (|top#19| state)) #b1) false) ; $sample$s$init$sync$4
  (= (= ((_ extract 0 0) (|top#20| state)) #b1) false) ; $sample$s$init$sync$3
  (= (= ((_ extract 0 0) (|top#21| state)) #b1) false) ; $sample$s$init$sync$23
  (= (= ((_ extract 0 0) (|top#22| state)) #b1) false) ; $sample$s$init$sync$22
  (= (= ((_ extract 0 0) (|top#23| state)) #b1) false) ; $sample$s$init$sync$21
  (= (= ((_ extract 0 0) (|top#24| state)) #b1) false) ; $sample$s$init$sync$20
  (= (= ((_ extract 0 0) (|top#25| state)) #b1) false) ; $sample$s$init$sync$2
  (= (= ((_ extract 0 0) (|top#26| state)) #b1) false) ; $sample$s$init$sync$19
  (= (= ((_ extract 0 0) (|top#27| state)) #b1) false) ; $sample$s$init$sync$18
  (= (= ((_ extract 0 0) (|top#28| state)) #b1) false) ; $sample$s$init$sync$17
  (= (= ((_ extract 0 0) (|top#29| state)) #b1) false) ; $sample$s$init$sync$16
  (= (= ((_ extract 0 0) (|top#30| state)) #b1) false) ; $sample$s$init$sync$15
  (= (= ((_ extract 0 0) (|top#31| state)) #b1) false) ; $sample$s$init$sync$14
  (= (= ((_ extract 0 0) (|top#32| state)) #b1) false) ; $sample$s$init$sync$13
  (= (= ((_ extract 0 0) (|top#33| state)) #b1) false) ; $sample$s$init$sync$12
  (= (= ((_ extract 0 0) (|top#34| state)) #b1) false) ; $sample$s$init$sync$11
  (= (= ((_ extract 0 0) (|top#35| state)) #b1) false) ; $sample$s$init$sync$10
  (= (= ((_ extract 0 0) (|top#36| state)) #b1) false) ; $sample$s$init$sync$1
  (= (= ((_ extract 0 0) (|top#37| state)) #b1) false) ; $assert$en
  (= (= ((_ extract 0 0) (|top#38| state)) #b1) false) ; $assert$check
  (|delayer_i| (|top_h delayer| state))
))
(define-fun |top_h| ((state |top_s|)) Bool (and
  (= (|top_is| state) (|delayer_is| (|top_h delayer| state)))
  (= (|top#6| state) (|delayer_n ui__load| (|top_h delayer| state))) ; delayer.ui__load
  (= (|top#7| state) (|delayer_n ui__inactive| (|top_h delayer| state))) ; delayer.ui__inactive
  (= (|top#8| state) (|delayer_n ui__done| (|top_h delayer| state))) ; delayer.ui__done
  (= (|top#4| state) (|delayer_n rst| (|top_h delayer| state))) ; delayer.rst
  (= (|top#10| state) (|delayer_n clk| (|top_h delayer| state))) ; delayer.clk
  (|delayer_h| (|top_h delayer| state))
))
(define-fun |top_t| ((state |top_s|) (next_state |top_s|)) Bool (and
  (= (|top#40| state) (|top#38| next_state)) ; $auto$ff.cc:262:slice$56 $assert$check
  (= (|top#41| state) (|top#37| next_state)) ; $auto$ff.cc:262:slice$57 $assert$en
  (= (ite (|top#5| state) #b1 #b0) (|top#36| next_state)) ; $6 $sample$s$init$sync$1
  (= (|top#14| state) (|top#35| next_state)) ; $15 $sample$s$init$sync$10
  (= (|top#35| state) (|top#34| next_state)) ; $16 $sample$s$init$sync$11
  (= (|top#34| state) (|top#33| next_state)) ; $17 $sample$s$init$sync$12
  (= (|top#33| state) (|top#32| next_state)) ; $18 $sample$s$init$sync$13
  (= (|top#32| state) (|top#31| next_state)) ; $19 $sample$s$init$sync$14
  (= (|top#31| state) (|top#30| next_state)) ; $20 $sample$s$init$sync$15
  (= (|top#30| state) (|top#29| next_state)) ; $21 $sample$s$init$sync$16
  (= (|top#29| state) (|top#28| next_state)) ; $22 $sample$s$init$sync$17
  (= (|top#28| state) (|top#27| next_state)) ; $23 $sample$s$init$sync$18
  (= (|top#27| state) (|top#26| next_state)) ; $24 $sample$s$init$sync$19
  (= (|top#36| state) (|top#25| next_state)) ; $7 $sample$s$init$sync$2
  (= (|top#26| state) (|top#24| next_state)) ; $25 $sample$s$init$sync$20
  (= (|top#24| state) (|top#23| next_state)) ; $26 $sample$s$init$sync$21
  (= (|top#23| state) (|top#22| next_state)) ; $27 $sample$s$init$sync$22
  (= (|top#22| state) (|top#21| next_state)) ; $28 $sample$s$init$sync$23
  (= (|top#25| state) (|top#20| next_state)) ; $8 $sample$s$init$sync$3
  (= (|top#20| state) (|top#19| next_state)) ; $9 $sample$s$init$sync$4
  (= (|top#19| state) (|top#18| next_state)) ; $10 $sample$s$init$sync$5
  (= (|top#18| state) (|top#17| next_state)) ; $11 $sample$s$init$sync$6
  (= (|top#17| state) (|top#16| next_state)) ; $12 $sample$s$init$sync$7
  (= (|top#16| state) (|top#15| next_state)) ; $13 $sample$s$init$sync$8
  (= (|top#15| state) (|top#14| next_state)) ; $14 $sample$s$init$sync$9
  (= (|top#45| state) (|top#13| next_state)) ; $auto$ff.cc:262:slice$64 \_ui__load
  (= (|top#49| state) (|top#9| next_state)) ; $auto$ff.cc:262:slice$59 \delay_fsm_state
  (= (|top#50| state) (|top#6| next_state)) ; $auto$ff.cc:262:slice$62 \delayer_ui__load
  (= (|top#51| state) (|top#3| next_state)) ; $auto$ff.cc:262:slice$63 \_ui__done
  (= (|top#21| state) (|top#2| next_state)) ; $29 \timer_ought_to_finish
  (|delayer_t| (|top_h delayer| state) (|top_h delayer| next_state))
)) ; end of module top
; yosys-smt2-topmod top
; end of yosys output
